{"version":3,"sources":["features/dictionary/model/visibilityState.ts","features/notification/selectors/index.ts","features/notification/slice/index.ts","features/notification/components/Toast/Toast.tsx","features/notification/components/Toastr/ToastrContainer.tsx","features/notification/components/Toastr/Toastr.tsx","features/lexicon/selectors/index.ts","features/grammar/buildConjugator.ts","features/grammar/util.ts","features/grammar/de/conjugation.ts","util/string.ts","features/grammar/en/conjugation.ts","features/grammar/fa/conjugation.ts","features/grammar/faRm/conjugation.ts","features/lexicon/util/index.ts","features/trainer/slice/trainingProgress.ts","features/trainer/selectors/index.ts","features/dictionary/selectors/index.ts","features/dictionary/slice/index.ts","components/Icons.tsx","features/trainer/model/trainingMode.ts","features/trainer/components/ScoreBadge/ScoreBadge.tsx","features/dictionary/components/DictionaryDetails/DictionaryDetails.tsx","features/dictionary/components/DictionaryAccordeon/DictionaryAccordeon.tsx","features/dictionary/components/DictionarySearch/DictionarySearch.tsx","features/dictionary/components/Dictionary/Dictionary.tsx","features/dictionary/components/Dictionary/DictionaryContainer.tsx","features/dictionary/routes/index.tsx","features/settings/components/Settings/Settings.tsx","util/file.ts","features/settings/routes/index.tsx","features/trainer/model/testStage.ts","util/time.ts","features/trainer/slice/selection/examinationStrategy.config.ts","features/trainer/slice/selection/examinationStrategy.ts","features/trainer/slice/selection/learningStrategy.config.ts","features/trainer/slice/selection/learningStrategy.ts","features/trainer/slice/selection/selectionStrategyFactory.ts","features/trainer/slice/selectRandom.ts","features/trainer/slice/index.ts","features/trainer/components/ToggleText/ToggleText.tsx","features/trainer/components/LangTrainer/BaseTrainer.tsx","features/trainer/components/LangTrainer/FarsiTrainer.tsx","features/trainer/components/LangTrainer/GermanTrainer.tsx","features/trainer/components/NoTraining/NoTraining.tsx","features/trainer/components/Trainer/Trainer.tsx","features/trainer/components/Trainer/TrainerContainer.tsx","features/trainer/routes/index.tsx","routes/index.tsx","components/Header.tsx","components/App.tsx","migrations/2-addVerbDetails.ts","migrations/lexiconMigration.ts","migrations/index.ts","features/lexicon/slice/index.ts","reducers/index.ts","serviceWorker.ts","decodeUrl.ts","index.tsx"],"names":["VisibilityState","selectSlice","state","notification","selectNotifications","createSelector","notifications","slice","createSlice","name","initialState","nextId","reducers","addNotification","payload","push","id","message","removeNotification","filter","n","actions","Toast","toastRef","React","createRef","toastEl","this","current","BootstrapToast","show","addEventListener","props","clear","className","role","aria-live","aria-atomic","data-bs-delay","ref","type","data-dismiss","aria-label","Component","mapDispatchToProps","ToastrContainer","connect","map","key","lexicon","selectWordRecord","words","selectWords","Object","values","buildConjugator","pronouns","conjugations","verb","form","getConjugationDetails","infinitive","conjugateVerb","person","tense","explicitConjugation","conjugationDetails","replace","pronoun","conjugatedVerb","conjugate","endsWithAny","string","suffixes","some","suffix","endsWith","conjugateDe","present","conjugatePresent","parseVerb","hasDeepEOmitOn1s","prefix","stem","getSuffix","appendedPrefix","getAppendedPrefix","includes","undefined","parseInfinitive","parse3s","_3s","appendixRegex","regex","RegExp","match","groups","etStem","tStem","Error","elnStem","enStem","unStem","insertEExtension","omitEExtension","omitS","conjugateEn","conjugate3sPresent","replaceTrailingY","conjugateFa","parsePresentStem","presentStem","preposition","tensePrefix","getTensePrefix","presentForm","trim","extension","conjugateFaRm","normalizeDe","word","de","normalizeEn","en","normalizeFa","fa","normalizeFaRm","faRm","getTrainingProgress","progress","trainer","buildEmptyTrainingProgress","score","lastCorrect","lastTried","selectProgress","selectCurrentTrainingUnit","currentTrainingUnit","dictionary","selectFilter","selectDictionary","buildDictionaryEntry","searchIndex","buildSearchIndex","buildDictionaryScore","toLowerCase","removeDiacritics","text","deConj","faConj","selectFilteredDictionary","entries","searchTerm","optimizedSearchTerm","entry","term","searchDictionary","ArrowDown","width","height","viewBox","fill","xmlns","fillRule","d","ArrowUp","Book","Check2Square","ChevronDown","Dash","FileEarmarkArrowDown","HourglassSplit","Lightning","Plus","Tools","X","TrainingMode","ScoreBadge","increased","decreased","DictionaryDetails","renderMasterData","renderConjugation","Fragment","formatType","renderOptionalBadge","computeConjugationDetails","details","renderConjugationDetails","DictionaryAccordeon","Hidden","renderRow","renderDetails","Visible","onClick","toggleDetails","colSpan","duration","easing","onAnimationEnd","endAnimation","hideDetails","showDetails","setState","Transitioning","setTimeout","DictionarySearch","searchRef","currentSearch","dir","placeholder","value","onChange","updateSearchTerm","resetSearchTerm","search","Dictionary","s","e","DictionaryContainer","path","component","Settings","title","exportDatabase","timestamp","format","Date","database","JSON","stringify","localStorage","content","event","document","createEvent","initEvent","anchor","createElement","setAttribute","encodeURIComponent","dispatchEvent","downloadFile","TestStage","getDifferenceFromNowInSeconds","date","differenceInSeconds","Number","POSITIVE_INFINITY","configuration","minGap","getPriority","gap","frequency","config","find","c","selectionStrategyFactory","mode","Examination","examinationStrategy","Learning","learningStrategy","buildPartialSums","partialSums","Array","length","ongoingSum","i","getLast","array","defaultValue","selectRandom","elements","weightProjection","rand","Math","random","weights","el","elementUpperBounds","totalWeight","selectedValue","selectedIndex","findIndex","sum","select","createAsyncThunk","trainingMode","getState","pass","getProgress","min","toISOString","fail","max","extraReducers","fulfilled","selectionStrategy","prioritizedUnits","buildPrioritizedUnits","flat","selectedUnit","unit","priority","extractUnscoredTrainingUnit","buildTrainingUnits","entity","trainers","buildNormalTrainingUnit","buildConjugationTrainingUnit","pickRandomPerson","result","ToggleText","expanded","BaseTrainer","inputRef","submitRef","enteredTranslation","stage","Initial","focus","onSubmit","submit","renderTask","isShowSolution","renderSolution","renderSolutionContent","renderSolutionInput","renderButtons","isWrongSolution","isCountingAsSuccess","getCorrectSolution","isCountingAsFailure","getSolutionInputConfig","label","large","rtl","htmlFor","autoComplete","autoCorrect","autoCapitalize","target","solve","proceed","preventDefault","check","next","reportResult","getStageAfterCheck","Passed","PassedOnRetry","Retry","Failed","FarsiTrainer","GermanTrainer","NoTraining","Trainer","selectNextUnit","renderBody","TrainerContainer","mapStateToProps","from","to","dictionaryRoutes","settingsRoutes","trainerRoutes","Header","collapseRef","collapse","Collapse","toggle","hide","App","basename","process","routes","migrateState","oldState","units","trainingProgress","migrateLexicon","migration","buildMigration","migrateWords","migrateTrainingUnit","migrateProgress","persistedWordRecord","persistedWords","expectedWords","vocabulary","expectedWordRecord","fromEntries","v","added","u","updated","isEqual","deleted","a","b","persisted","forEach","w","migrate","version","Promise","resolve","createMigrate","2","migrationToV2","then","lexiconMigration","rootReducer","combineReducers","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","decoded","split","join","replaceUrl","pathname","hash","history","replaceState","decodeUrl","persistedReducer","persistReducer","storage","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","hidden","loading","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","dispatch"],"mappings":"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","file":"static/js/main.fe46d77e.chunk.js","sourcesContent":["export enum VisibilityState {\n  Visible,\n  Hidden,\n  Transitioning,\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.notification;\nexport default selectSlice;\n\nexport const selectNotifications = createSelector([selectSlice], ({ notifications }) => notifications);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { Notification } from '../model/notification';\n\nexport interface State {\n  nextId: number;\n  notifications: Notification[];\n}\n\nconst initialState: State = {\n  nextId: 0,\n  notifications: [],\n};\n\nconst slice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    addNotification: (state: State, { payload }: { payload: string }): void => {\n      state.notifications.push({ id: state.nextId, message: payload });\n      state.nextId++;\n    },\n    removeNotification: (state: State, { payload }: { payload: number }): void => {\n      state.notifications = state.notifications.filter(n => n.id !== payload);\n    },\n  },\n});\n\nexport const { addNotification, removeNotification } = slice.actions;\nexport default slice.reducer;\n","import { Toast as BootstrapToast } from 'bootstrap';\nimport React from 'react';\n\nexport class Toast extends React.Component<{\n  message: string;\n  clear: () => void;\n}> {\n  private toastRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount(): void {\n    const toastEl = this.toastRef.current;\n    if (toastEl) {\n      const toast = new BootstrapToast(toastEl) as BootstrapToast & { show: () => void };\n      toast.show();\n      toastEl.addEventListener('hidden.bs.toast', () => this.props.clear());\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"toast d-flex align-items-center bg-primary text-white\"\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        data-bs-delay=\"5000\"\n        ref={this.toastRef}\n      >\n        <div className=\"toast-body\">\n          {this.props.message}\n        </div>\n        <button type=\"button\"\n          className=\"btn-close me-2\"\n          data-dismiss=\"toast\"\n          aria-label=\"Schließen\"\n        ></button>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { Notification } from '../../model/notification';\nimport { selectNotifications } from '../../selectors';\nimport { removeNotification } from '../../slice';\nimport { Toastr } from './Toastr';\n\nconst mapStateToProps = (state: any): any => ({\n  notifications: selectNotifications(state),\n});\n\nconst mapDispatchToProps = {\n  clear: removeNotification,\n};\n\nexport const ToastrContainer =\n  connect<{ notifications: Notification[] }, { clear: (id: number) => void }, {}>(mapStateToProps, mapDispatchToProps)(Toastr);\n","import React from 'react';\nimport { Notification } from '../../model/notification';\nimport { Toast } from '../Toast/Toast';\nimport './Toastr.scss';\n\nexport const Toastr = ({ notifications, clear }: {\n  notifications: Notification[];\n  clear: (idx: number) => void;\n}): JSX.Element => (\n  <div className=\"toastr\">\n    {notifications.map(notification => (\n      <Toast\n        clear={(): void => clear(notification.id)}\n        message={notification.message}\n        key={`toast-${notification.id}`}\n      ></Toast>\n    ))}\n  </div>\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.lexicon;\nexport default selectSlice;\n\nexport const selectWordRecord = createSelector([selectSlice],\n  ({ words }) => words\n);\n\nexport const selectWords = createSelector([selectWordRecord],\n  words => Object.values(words)\n);\n","import { ConjugationDetails } from './model/conjugationDetails';\nimport { Person, Tense, VerbForm } from './model/verbForm';\n\nexport const buildConjugator = <T extends ConjugationDetails> (\n  pronouns: Record<Person, string>,\n  conjugations: Record<Tense, (verb: T, person: Person) => string>,\n) => (verb: string | T, form: VerbForm): string => {\n\n    const conjugate = (verb: string | T, form: VerbForm): string => {\n      const conjugationDetails = getConjugationDetails(verb);\n      if (form === 'infinitive') {\n        return conjugationDetails.infinitive.replace(/\\|/g, '');\n      }\n\n      const { person, tense } = form;\n      const pronoun = pronouns[person];\n      const conjugatedVerb = conjugateVerb(conjugationDetails, person, tense);\n      return `${pronoun} ${conjugatedVerb}`;\n    };\n\n    const getConjugationDetails = <C extends ConjugationDetails> (verb: string | C): C => {\n      if (typeof verb === 'string') {\n        return { infinitive: verb } as C;\n      } else {\n        return verb;\n      }\n    };\n\n    const conjugateVerb = (verb: T, person: Person, tense: Tense): string => {\n      const explicitConjugation = verb[tense] && verb[tense]?.[person];\n      if (explicitConjugation) {\n        return explicitConjugation;\n      } else {\n        return conjugations[tense](verb, person);\n      }\n    };\n\n    return conjugate(verb, form);\n  };\n","export const endsWithAny = (string: string, ...suffixes: string[]): boolean => {\n  return suffixes.some(suffix => string.endsWith(suffix));\n};\n","import { escapeRegExp } from '../../../util/string';\nimport { buildConjugator } from '../buildConjugator';\nimport { ConjugationDetails } from '../model/conjugationDetails';\nimport { Person } from '../model/verbForm';\nimport { endsWithAny } from '../util';\nimport { VerbStructure } from './model/verbStructure';\n\nexport const conjugateDe = buildConjugator<ConjugationDetails>(\n  {\n    '1s': 'ich',\n    '2s': 'du',\n    '3s': 'er / sie',\n    '1p': 'wir',\n    '2p': 'ihr',\n    '3p': 'sie',\n  },\n  {\n    present: (verb, person) => conjugatePresent(verb, person),\n  }\n);\n\nconst conjugatePresent = (verb: ConjugationDetails, person: Person): string => {\n  const { hasDeepEOmitOn1s, prefix, stem } = parseVerb(verb, person);\n  const suffix = getSuffix(stem, person);\n  const appendedPrefix = getAppendedPrefix(prefix);\n\n  if (hasDeepEOmitOn1s && person === '1s') {\n    return stem.slice(0, -2) + stem.slice(-1) + suffix + appendedPrefix;\n  } else {\n    return stem + suffix + appendedPrefix;\n  }\n};\n\nconst parseVerb = (verb: ConjugationDetails, person: Person): VerbStructure => {\n  if (['2s', '3s'].includes(person) && verb?.present?.['3s'] !== undefined) {\n    const { prefix } = parseInfinitive(verb.infinitive);\n    return parse3s(verb.present['3s'], prefix);\n  } else {\n    return parseInfinitive(verb.infinitive);\n  }\n};\n\nconst parse3s = (_3s: string, prefix?: string): VerbStructure => {\n  const appendixRegex = escapeRegExp(getAppendedPrefix(prefix));\n  const regex = new RegExp(`^((?<etStem>.*)et|(?<tStem>.*)t)${appendixRegex}$`);\n  const match = _3s.match(regex);\n  if (match !== null) {\n    return {\n      prefix,\n      stem: match.groups?.etStem ?? match.groups?.tStem ?? '',\n    };\n  } else {\n    throw new Error(`Could not parse German 3s ${_3s}.`);\n  }\n};\n\nconst parseInfinitive = (infinitive: string): VerbStructure => {\n  const regex = /^((?<prefix>[^|]*)\\|)?((?<enStem>.*)en|(?<elnStem>.*el)n|(?<unStem>.*u)n)$/;\n  const match = infinitive.match(regex);\n  if (match !== null) {\n    return {\n      hasDeepEOmitOn1s: match.groups?.elnStem !== undefined,\n      prefix: match.groups?.prefix,\n      stem: match.groups?.enStem ?? match.groups?.elnStem ?? match.groups?.unStem ?? '',\n    };\n  } else {\n    throw new Error(`Could not parse German infinitive ${infinitive}.`);\n  }\n};\n\nconst getSuffix = (stem: string, person: Person): string => {\n  const insertEExtension =\n    endsWithAny(stem, 'd', 't') ||\n    (\n      endsWithAny(stem, 'm', 'n') &&\n      !endsWithAny(stem, 'mm', 'nn', 'rm', 'rn', 'lm', 'ln')\n    );\n  const omitEExtension = endsWithAny(stem, 'el', 'u') &&\n    !endsWithAny(stem, 'iel');\n  const omitS = endsWithAny(stem, 's', 'ss', 'ß', 'z', 'tz', 'x', 'chs');\n\n  switch (person) {\n  case '1s':\n    return 'e';\n  case '2s':\n    return insertEExtension ? 'est' : omitS ? 't' : 'st';\n  case '3s':\n    return insertEExtension ? 'et' : 't';\n  case '1p':\n    return omitEExtension ? 'n' : 'en';\n  case '2p':\n    return insertEExtension ? 'et' : 't';\n  case '3p':\n    return omitEExtension ? 'n' : 'en';\n  }\n};\n\nconst getAppendedPrefix = (prefix: string | undefined): string => {\n  if (prefix === undefined) {\n    return '';\n  } else {\n    return ` ${prefix}`;\n  }\n};\n","export const escapeRegExp = (string: string): string =>\n  string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n","import { buildConjugator } from '../buildConjugator';\nimport { ConjugationDetails } from '../model/conjugationDetails';\nimport { Person } from '../model/verbForm';\nimport { endsWithAny } from '../util';\n\nexport const conjugateEn = buildConjugator<ConjugationDetails>(\n  {\n    '1s': 'I',\n    '2s': 'you',\n    '3s': 'he / she',\n    '1p': 'we',\n    '2p': 'you',\n    '3p': 'they',\n  },\n  {\n    present: (verb, person) => conjugatePresent(verb, person),\n  }\n);\n\nconst conjugatePresent = (verb: ConjugationDetails, person: Person): string => {\n  if (person === '3s') {\n    return conjugate3sPresent(verb.infinitive);\n  } else {\n    return verb.infinitive;\n  }\n};\n\nconst conjugate3sPresent = (infinitive: string): string => {\n  const replaceTrailingY =\n    endsWithAny(infinitive, 'y') &&\n    !endsWithAny(infinitive, 'ay', 'ey', 'iy', 'oy', 'uy');\n  const insertEExtension =\n    endsWithAny(infinitive, 's', 'z', 'x', 'sh', 'ch', 'o') &&\n    !endsWithAny(infinitive, 'oo');\n\n  if (replaceTrailingY) {\n    return infinitive.slice(0, -1) + 'ies';\n  } else if (insertEExtension) {\n    return infinitive + 'es';\n  } else {\n    return infinitive + 's';\n  }\n};\n","import { buildConjugator } from '../buildConjugator';\nimport { PresentForm, VerbFa } from '../fa/model/verb';\nimport { Person } from '../model/verbForm';\nimport { endsWithAny } from '../util';\nimport { VerbStructure } from './model/verbStructure';\n\nexport const conjugateFa = buildConjugator<VerbFa>(\n  {\n    '1s': 'مَن',\n    '2s': 'تو',\n    '3s': 'او',\n    '1p': 'ما',\n    '2p': 'شُما',\n    '3p': 'آنها',\n  },\n  {\n    present: (verb, person) => conjugatePresent(verb, person),\n  }\n);\n\nconst conjugatePresent = (verb: VerbFa, person: Person): string => {\n  const { preposition, prefix, stem } = parsePresentStem(verb.presentStem);\n  const tensePrefix = getTensePrefix(verb.presentForm);\n  const suffix = getSuffix(stem, person);\n  return `${preposition ?? ''} ${prefix ?? ''}${tensePrefix}${stem}${suffix}`.trim();\n};\n\nconst parsePresentStem = (presentStem: string): VerbStructure => {\n  const regex = /^((?<preposition>.*) )?((?<prefix>.*)\\|)?(?<stem>[^ ]+)$/;\n  const match = presentStem.match(regex);\n  if (match !== null) {\n    return {\n      preposition: match.groups?.preposition,\n      prefix: match.groups?.prefix,\n      stem: match.groups?.stem ?? '',\n    };\n  } else {\n    throw new Error(`Could not parse Farsi present stem ${presentStem}.`);\n  }\n};\n\nconst getTensePrefix = (presentForm: PresentForm = 'imperfect'): string => {\n  if (presentForm === 'imperfect') {\n    return 'می‌';\n  } else {\n    return '';\n  }\n};\n\nconst getSuffix = (stem: string, person: Person): string => {\n  const extension = (\n    endsWithAny(stem, 'آ', 'ا', 'و') &&\n    !endsWithAny(stem, 'آو', 'او', 'یو', 'َو', 'ِو', 'ُو')\n  ) ? 'ی' : '';\n\n  switch (person) {\n  case '1s':\n    return extension + 'َم';\n  case '2s':\n    return extension + 'ی';\n  case '3s':\n    return extension + 'َد';\n  case '1p':\n    return extension + 'یم';\n  case '2p':\n    return extension + 'ید';\n  case '3p':\n    return extension + 'َند';\n  }\n};\n","import { buildConjugator } from '../buildConjugator';\nimport { PresentForm, VerbFa } from '../fa/model/verb';\nimport { VerbStructure } from '../fa/model/verbStructure';\nimport { Person } from '../model/verbForm';\nimport { endsWithAny } from '../util';\n\nexport const conjugateFaRm = buildConjugator<VerbFa>(\n  {\n    '1s': 'man',\n    '2s': 'to',\n    '3s': 'u',\n    '1p': 'mâ',\n    '2p': 'shomâ',\n    '3p': 'ânhâ',\n  },\n  {\n    present: (verb, person) => conjugatePresent(verb, person),\n  }\n);\n\nconst conjugatePresent = (verb: VerbFa, person: Person): string => {\n  const { preposition, prefix, stem } = parsePresentStem(verb.presentStem);\n  const tensePrefix = getTensePrefix(verb.presentForm);\n  const suffix = getSuffix(stem, person);\n  return `${preposition ?? ''} ${prefix ?? ''}${tensePrefix}${stem}${suffix}`.trim();\n};\n\nconst parsePresentStem = (presentStem: string): VerbStructure => {\n  const regex = /^((?<preposition>.*) )?((?<prefix>[^|]*)\\|)?(?<stem>[^ ]+)$/;\n  const match = presentStem.match(regex);\n  if (match !== null) {\n    return {\n      preposition: match.groups?.preposition,\n      prefix: match.groups?.prefix,\n      stem: match.groups?.stem ?? '',\n    };\n  } else {\n    throw new Error(`Could not parse romanized Farsi present stem ${presentStem}.`);\n  }\n};\n\nconst getTensePrefix = (presentForm: PresentForm = 'imperfect'): string => {\n  if (presentForm === 'imperfect') {\n    return 'mi';\n  } else {\n    return '';\n  }\n};\n\nconst getSuffix = (stem: string, person: Person): string => {\n  const extension = endsWithAny(stem, 'â', 'u') ? 'y' : '';\n\n  switch (person) {\n  case '1s':\n    return extension + 'am';\n  case '2s':\n    return extension + 'i';\n  case '3s':\n    return extension + 'ad';\n  case '1p':\n    return extension + 'im';\n  case '2p':\n    return extension + 'id';\n  case '3p':\n    return extension + 'and';\n  }\n};\n","import { conjugateDe } from '../../grammar/de/conjugation';\nimport { conjugateEn } from '../../grammar/en/conjugation';\nimport { conjugateFa } from '../../grammar/fa/conjugation';\nimport { conjugateFaRm } from '../../grammar/faRm/conjugation';\nimport { Word } from '../model/word';\n\nexport const normalizeDe = (word: Word): string => {\n  if (word.type === 'verb') {\n    return conjugateDe(word.de, 'infinitive');\n  } else {\n    return word.de;\n  }\n};\n\nexport const normalizeEn = (word: Word): string => {\n  if (word.type === 'verb') {\n    return conjugateEn(word.en, 'infinitive');\n  } else {\n    return word.en;\n  }\n};\n\nexport const normalizeFa = (word: Word): string => {\n  if (word.type === 'verb') {\n    return conjugateFa(word.fa, 'infinitive');\n  } else {\n    return word.fa;\n  }\n};\n\nexport const normalizeFaRm = (word: Word): string => {\n  if (word.type === 'verb') {\n    return conjugateFaRm(word.faRm, 'infinitive');\n  } else {\n    return word.faRm;\n  }\n};\n","import { ProgressAggregate, TrainingProgress } from '../model/trainingProgress';\nimport { Trainer } from '../model/trainingUnit';\n\nexport const getTrainingProgress = (\n  progress: Record<number, ProgressAggregate>,\n  id: number,\n  trainer: Trainer\n): TrainingProgress => {\n  return progress[id]?.[trainer] ?? buildEmptyTrainingProgress();\n};\n\nexport const buildEmptyTrainingProgress = (): TrainingProgress => ({\n  score: 0,\n  lastCorrect: null,\n  lastTried: null,\n});\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../slice';\nimport { getTrainingProgress } from '../slice/trainingProgress';\n\nconst selectSlice = (state: any): State => state.trainer;\nexport default selectSlice;\n\nexport const selectProgress = createSelector([selectSlice], ({ progress }) => progress);\n\nexport const selectCurrentTrainingUnit = createSelector([selectSlice],\n  ({ currentTrainingUnit, progress }) => currentTrainingUnit !== null\n    ? {\n      ...currentTrainingUnit,\n      score: getTrainingProgress(progress, currentTrainingUnit.id, currentTrainingUnit.trainer).score\n    }\n    : null\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { Word } from '../../lexicon/model/word';\nimport { selectWords } from '../../lexicon/selectors';\nimport { normalizeDe, normalizeEn, normalizeFa, normalizeFaRm } from '../../lexicon/util';\nimport { ProgressAggregate } from '../../trainer/model/trainingProgress';\nimport { selectProgress } from '../../trainer/selectors';\nimport { DictionaryEntry, DictionaryScore } from '../model/dictionaryEntry';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.dictionary;\nexport default selectSlice;\n\nexport const selectFilter = createSelector([selectSlice], state => state.filter);\n\nexport const selectDictionary = createSelector([selectWords, selectProgress],\n  (words, progress) => words.map(word => buildDictionaryEntry(word, progress[word.id]))\n);\n\nconst buildDictionaryEntry = (word: Word, progress: ProgressAggregate): DictionaryEntry => ({\n  id: word.id,\n  de: normalizeDe(word),\n  fa: normalizeFa(word),\n  searchIndex: buildSearchIndex(word),\n  word,\n  score: buildDictionaryScore(progress),\n});\n\nconst buildSearchIndex = (word: Word): string[] => [\n  normalizeDe(word).toLowerCase(),\n  normalizeEn(word).toLowerCase(),\n  normalizeFa(word),\n  removeDiacritics(normalizeFa(word)),\n  normalizeFaRm(word).toLowerCase(),\n];\n\nconst removeDiacritics = (text: string): string =>\n  text.replace(/[َُِ]/g, '');\n\nconst buildDictionaryScore = (progress: ProgressAggregate): DictionaryScore => ({\n  de: progress?.de?.score,\n  deConj: progress?.deConj?.score,\n  fa: progress?.fa?.score,\n  faConj: progress?.faConj?.score,\n});\n\nexport const selectFilteredDictionary = createSelector([selectFilter, selectDictionary],\n  ({ searchTerm }, entries) => {\n    if (searchTerm === undefined) {\n      return entries;\n    } else {\n      const optimizedSearchTerm = searchTerm.toLowerCase().trim();\n      return entries.filter(entry =>\n        entry.searchIndex.some(term => term.includes(optimizedSearchTerm))\n      );\n    }\n  }\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { DictionaryFilter } from '../model/dictionaryFilter';\n\nexport interface State {\n  filter: Partial<DictionaryFilter>;\n}\n\nconst initialState: State = {\n  filter: {},\n};\n\nconst slice = createSlice({\n  name: 'dictionary',\n  initialState,\n  reducers: {\n    searchDictionary: (state: State, { payload }: { payload: string | null }): void => {\n      state.filter.searchTerm = payload || undefined;\n    },\n  },\n});\n\nexport const { searchDictionary } = slice.actions;\nexport default slice.reducer;\n","import React from 'react';\n\nexport const ArrowDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\n  </svg>\n);\n\nexport const ArrowUp = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\n  </svg>\n);\n\nexport const Book = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-book\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M1 2.828v9.923c.918-.35 2.107-.692 3.287-.81 1.094-.111 2.278-.039 3.213.492V2.687c-.654-.689-1.782-.886-3.112-.752-1.234.124-2.503.523-3.388.893zm7.5-.141v9.746c.935-.53 2.12-.603 3.213-.493 1.18.12 2.37.461 3.287.811V2.828c-.885-.37-2.154-.769-3.388-.893-1.33-.134-2.458.063-3.112.752zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\"/>\n  </svg>\n);\n\nexport const Check2Square = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check2-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\n    <path fillRule=\"evenodd\" d=\"M1.5 13A1.5 1.5 0 0 0 3 14.5h10a1.5 1.5 0 0 0 1.5-1.5V8a.5.5 0 0 0-1 0v5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 3v10z\"/>\n  </svg>\n);\n\nexport const ChevronDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n  </svg>\n);\n\nexport const Dash = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\n  </svg>\n);\n\nexport const FileEarmarkArrowDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-earmark-arrow-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4 0h5.5v1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h1V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z\"/>\n    <path d=\"M9.5 3V0L14 4.5h-3A1.5 1.5 0 0 1 9.5 3z\"/>\n    <path fillRule=\"evenodd\" d=\"M8 6a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 10.293V6.5A.5.5 0 0 1 8 6z\"/>\n  </svg>\n);\n\nexport const HourglassSplit = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-hourglass-split\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M2.5 15a.5.5 0 1 1 0-1h1v-1a4.5 4.5 0 0 1 2.557-4.06c.29-.139.443-.377.443-.59v-.7c0-.213-.154-.451-.443-.59A4.5 4.5 0 0 1 3.5 3V2h-1a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1h-1v1a4.5 4.5 0 0 1-2.557 4.06c-.29.139-.443.377-.443.59v.7c0 .213.154.451.443.59A4.5 4.5 0 0 1 12.5 13v1h1a.5.5 0 0 1 0 1h-11zm2-13v1c0 .537.12 1.045.337 1.5h6.326c.216-.455.337-.963.337-1.5V2h-7zm3 6.35c0 .701-.478 1.236-1.011 1.492A3.5 3.5 0 0 0 4.5 13s.866-1.299 3-1.48V8.35zm1 0c0 .701.478 1.236 1.011 1.492A3.5 3.5 0 0 1 11.5 13s-.866-1.299-3-1.48V8.35z\"/>\n  </svg>\n);\n\nexport const Lightning = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-lightning\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09zM4.157 8.5H7a.5.5 0 0 1 .478.647L6.11 13.59l5.732-6.09H9a.5.5 0 0 1-.478-.647L9.89 2.41 4.157 8.5z\"/>\n  </svg>\n);\n\nexport const Plus = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n  </svg>\n);\n\nexport const Tools = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-tools\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M0 1l1-1 3.081 2.2a1 1 0 0 1 .419.815v.07a1 1 0 0 0 .293.708L10.5 9.5l.914-.305a1 1 0 0 1 1.023.242l3.356 3.356a1 1 0 0 1 0 1.414l-1.586 1.586a1 1 0 0 1-1.414 0l-3.356-3.356a1 1 0 0 1-.242-1.023L9.5 10.5 3.793 4.793a1 1 0 0 0-.707-.293h-.071a1 1 0 0 1-.814-.419L0 1zm11.354 9.646a.5.5 0 0 0-.708.708l3 3a.5.5 0 0 0 .708-.708l-3-3z\"/>\n    <path fillRule=\"evenodd\" d=\"M15.898 2.223a3.003 3.003 0 0 1-3.679 3.674L5.878 12.15a3 3 0 1 1-2.027-2.027l6.252-6.341A3 3 0 0 1 13.778.1l-2.142 2.142L12 4l1.757.364 2.141-2.141zm-13.37 9.019L3.001 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026z\"/>\n  </svg>\n);\n\nexport const X = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n  </svg>\n);\n","export enum TrainingMode {\n  Examination,\n  Learning,\n}\n","import React from 'react';\nimport { ArrowDown, ArrowUp } from '../../../../components/Icons';\nimport './ScoreBadge.scss';\n\nexport const ScoreBadge = ({ score, increased, decreased }: {\n  score: number;\n  increased?: boolean;\n  decreased?: boolean;\n}): JSX.Element => (\n  <span className={`badge rounded-pill score-badge lvl-${score}`}>\n    {decreased && <ArrowDown></ArrowDown>}\n    {increased && <ArrowUp></ArrowUp>}\n    {score}\n  </span>\n);\n","import React from 'react';\nimport { conjugateDe } from '../../../grammar/de/conjugation';\nimport { conjugateFa } from '../../../grammar/fa/conjugation';\nimport { conjugateFaRm } from '../../../grammar/faRm/conjugation';\nimport { SpecificTense } from '../../../grammar/model/verbForm';\nimport { Word, WordType } from '../../../lexicon/model/word';\nimport { normalizeDe, normalizeEn, normalizeFa, normalizeFaRm } from '../../../lexicon/util';\nimport { ScoreBadge } from '../../../trainer/components/ScoreBadge/ScoreBadge';\nimport { DictionaryConjugationDetails } from '../../model/dictionaryConjugationDetails';\nimport { DictionaryEntry, DictionaryScore } from '../../model/dictionaryEntry';\nimport './DictionaryDetails.scss';\n\nexport class DictionaryDetails extends React.Component<{\n  entry: DictionaryEntry;\n}> {\n  render(): JSX.Element {\n    const { entry } = this.props;\n    return (\n      <div className=\"dict-details\">\n        {this.renderMasterData(entry.word, entry.score)}\n        {this.renderConjugation(entry.word, entry.score)}\n      </div>\n    );\n  }\n\n  private renderMasterData(word: Word, score: DictionaryScore): JSX.Element {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"key\">\n            Wortart\n          </div>\n          <div className=\"value\">\n            {this.formatType(word.type)}\n          </div>\n        </div>\n        <div className=\"row fa-main\">\n          <div className=\"key\">\n            Persisch\n          </div>\n          <div className=\"value\">\n            <p className=\"text-rtl\">\n              {normalizeFa(word)}\n              {this.renderOptionalBadge(score.fa, 'score-left')}\n            </p>\n            <p className=\"fa-rm\">\n              /{normalizeFaRm(word)}/\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"key\">\n            Deutsch\n          </div>\n          <div className=\"value\">\n            {normalizeDe(word)}\n            {this.renderOptionalBadge(score.de, 'score-right')}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"key\">\n            Englisch\n          </div>\n          <div className=\"value\">\n            {normalizeEn(word)}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private formatType(type: WordType): string {\n    switch (type) {\n    case 'adjective':\n      return 'Adjektiv';\n    case 'noun':\n      return 'Substantiv';\n    case 'verb':\n      return 'Verb';\n    case 'phrase':\n      return 'Ausdruck';\n    default:\n      return 'nicht klassifizert';\n    }\n  }\n\n  private renderConjugation(word: Word, score: DictionaryScore): JSX.Element | undefined {\n    if (word.type !== 'verb') {\n      return undefined;\n    }\n\n    const conjugationDetails = this.computeConjugationDetails(word);\n\n    return (\n      <React.Fragment>\n        <div className=\"conj-header\">\n          <div className=\"key\">\n            Konjugation\n          </div>\n          {(score.faConj || score.deConj) && (\n            <div className=\"value\">\n              {score.faConj ? this.renderOptionalBadge(score.faConj) : ' – '}\n              /\n              {score.deConj ? this.renderOptionalBadge(score.deConj) : ' – '}\n            </div>\n          )}\n        </div>\n        {conjugationDetails.map(details => this.renderConjugationDetails(details))}\n      </React.Fragment>\n    );\n  }\n\n  private computeConjugationDetails(word: Word): DictionaryConjugationDetails[] {\n    return ['1s', '2s', '3s', '1p', '2p', '3p']\n      .map(person => ({ person, tense: 'present' }) as SpecificTense)\n      .map(form => ({\n        person: form.person,\n        de: conjugateDe(word.de, form),\n        fa: conjugateFa(word.fa, form),\n        faRm: conjugateFaRm(word.faRm, form),\n      }));\n  }\n\n  private renderOptionalBadge(score: number | undefined, className?: string): JSX.Element | undefined {\n    if (score === undefined) {\n      return undefined;\n    } else if (className === undefined) {\n      return <ScoreBadge score={score}></ScoreBadge>;\n    } else {\n      return (\n        <span className={className}>\n          <ScoreBadge score={score}></ScoreBadge>\n        </span>\n      );\n    }\n  }\n\n  private renderConjugationDetails(details: DictionaryConjugationDetails): JSX.Element {\n    return (\n      <div className=\"row\" key={details.person}>\n        <div className=\"key\">\n          {details.de}\n        </div>\n        <div className=\"value\">\n          <p className=\"text-rtl\">\n            {details.fa}\n          </p>\n          <p className=\"fa-rm\">\n            /{details.faRm}/\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { ChevronDown } from '../../../../components/Icons';\nimport { DictionaryEntry } from '../../model/dictionaryEntry';\nimport { VisibilityState } from '../../model/visibilityState';\nimport { DictionaryDetails } from '../DictionaryDetails/DictionaryDetails';\nimport './DictionaryAccordeon.scss';\n\nexport class DictionaryAccordeon extends React.Component<{\n  entry: DictionaryEntry;\n}, {\n  details: VisibilityState;\n}> {\n  state = {\n    details: VisibilityState.Hidden,\n  };\n\n  render(): JSX.Element {\n    const { entry } = this.props;\n    return (\n      <React.Fragment>\n        {this.renderRow(entry)}\n        {this.state.details !== VisibilityState.Hidden && this.renderDetails(entry)}\n      </React.Fragment>\n    );\n  }\n\n  private renderRow(entry: DictionaryEntry): JSX.Element {\n    return (\n      <tr\n        className={`dict-accordeon ${this.state.details === VisibilityState.Visible ? 'show-details' : ''}`}\n        onClick={(): void => this.toggleDetails()}\n      >\n        <td className=\"text-rtl\">{entry.fa}</td>\n        <td>{entry.de}</td>\n        <td><ChevronDown></ChevronDown></td>\n      </tr>\n    );\n  }\n\n  private renderDetails(entry: DictionaryEntry): JSX.Element {\n    return (\n      <tr\n        className=\"dict-accordeon-details\"\n      >\n        <td colSpan={3}>\n          <AnimateHeight\n            height={(this.state.details === VisibilityState.Visible) ? 'auto' : 0}\n            duration={250}\n            easing=\"ease-out\"\n            onAnimationEnd={(): void => this.endAnimation()}\n          >\n            <DictionaryDetails entry={entry}></DictionaryDetails>\n          </AnimateHeight>\n        </td>\n      </tr>\n    );\n  }\n\n  private toggleDetails(): void {\n    switch (this.state.details) {\n    case VisibilityState.Visible:\n      return this.hideDetails();\n    case VisibilityState.Hidden:\n      return this.showDetails();\n    }\n  }\n\n  private hideDetails(): void {\n    this.setState({ details: VisibilityState.Transitioning });\n  }\n\n  private showDetails(): void {\n    this.setState({ details: VisibilityState.Transitioning });\n    setTimeout(() => this.setState({ details: VisibilityState.Visible }));\n  }\n\n  private endAnimation(): void {\n    if (this.state.details === VisibilityState.Transitioning) {\n      this.setState({ details: VisibilityState.Hidden });\n    }\n  }\n}\n","import React from 'react';\nimport { X } from '../../../../components/Icons';\nimport './DictionarySearch.scss';\n\nexport class DictionarySearch extends React.Component<{\n  currentSearch?: string;\n  search: (searchTerm: string | null) => void;\n}> {\n  private searchRef = React.createRef<HTMLInputElement>();\n\n  render(): JSX.Element {\n    return (\n      <div className=\"dict-search\">\n        <input className={`form-control ${this.props.currentSearch ? '' : 'empty'}`}\n          type=\"text\"\n          dir=\"auto\"\n          placeholder=\"Durchsuchen...\"\n          ref={this.searchRef}\n          value={this.props.currentSearch ?? ''}\n          onChange={(): void => this.updateSearchTerm()}\n        />\n        <button className=\"btn bg-transparent\"\n          onClick={(): void => this.resetSearchTerm()}\n        >\n          <X></X>\n        </button>\n      </div>\n    );\n  }\n\n  private updateSearchTerm(): void {\n    const searchTerm = this.searchRef.current?.value ?? null;\n    this.props.search(searchTerm);\n  }\n\n  private resetSearchTerm(): void {\n    this.props.search(null);\n  }\n}\n","import React from 'react';\nimport { DictionaryEntry } from '../../model/dictionaryEntry';\nimport { DictionaryFilter } from '../../model/dictionaryFilter';\nimport { DictionaryAccordeon } from '../DictionaryAccordeon/DictionaryAccordeon';\nimport { DictionarySearch } from '../DictionarySearch/DictionarySearch';\nimport './Dictionary.scss';\n\nexport class Dictionary extends React.Component<{\n  entries: DictionaryEntry[];\n  filter: Partial<DictionaryFilter>;\n  search: (searchTerm: string | null) => void;\n}> {\n  render(): JSX.Element {\n    const { entries } = this.props;\n    return (\n      <div className=\"dictionary\">\n        <h2>Wörterbuch</h2>\n        <DictionarySearch\n          currentSearch={this.props.filter?.searchTerm}\n          search={(s: string | null): void => this.props.search(s)}\n        >\n        </DictionarySearch>\n        <table className=\"table\">\n          <tbody>\n            {entries.map(e => (<DictionaryAccordeon key={e.id} entry={e}></DictionaryAccordeon>))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { selectFilter, selectFilteredDictionary } from '../../selectors';\nimport { searchDictionary } from '../../slice';\nimport { Dictionary } from './Dictionary';\n\nconst mapStateToProps = (state: any): any => ({\n  entries: selectFilteredDictionary(state),\n  filter: selectFilter(state),\n});\n\nconst mapDispatchToProps = {\n  search: searchDictionary,\n};\n\nexport const DictionaryContainer =\n  connect(mapStateToProps, mapDispatchToProps)(Dictionary);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { DictionaryContainer } from '../components/Dictionary/DictionaryContainer';\n\nexport default [\n  <Route key=\"dictionary\"\n    path=\"/dictionary\"\n    component={DictionaryContainer}>\n  </Route>,\n];\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { FileEarmarkArrowDown } from '../../../../components/Icons';\nimport { downloadFile } from '../../../../util/file';\nimport './Settings.scss';\n\nexport class Settings extends React.Component {\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <h2>Einstellungen</h2>\n        <div className=\"settings\">\n          <button className=\"btn btn-link\"\n            title=\"Datenbank speichern\"\n            onClick={(): void => this.exportDatabase()}\n          >\n            <FileEarmarkArrowDown></FileEarmarkArrowDown>\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private exportDatabase(): void {\n    const timestamp = format(new Date(), 'yyyy-MM-dd-HH-mm');\n    const database = JSON.stringify(localStorage);\n    downloadFile(`persian-learner-backup-${timestamp}.json`, database);\n  }\n}\n","export const downloadFile = (name: string, content: string): void => {\n  const event = document.createEvent('MouseEvents');\n  event.initEvent('click', true, true);\n\n  const anchor = document.createElement('a');\n  anchor.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\n  anchor.setAttribute('download', name);\n  anchor.dispatchEvent(event);\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Settings } from '../components/Settings/Settings';\n\nexport default [\n  <Route key=\"settings\"\n    path=\"/settings\"\n    component={Settings}>\n  </Route>,\n];\n","export enum TestStage {\n  Initial,\n  Retry,\n  Passed,\n  PassedOnRetry,\n  Failed,\n}\n","import { differenceInSeconds } from 'date-fns';\n\nexport const getDifferenceFromNowInSeconds = (date: string | null): number => {\n  if (date !== null) {\n    return differenceInSeconds(new Date(), new Date(date));\n  } else {\n    return Number.POSITIVE_INFINITY;\n  }\n};\n","const configuration = {\n  score: 5,\n  minGap: 7*24*60*60,\n};\n\nexport default configuration;\n","import { getDifferenceFromNowInSeconds } from '../../../../util/time';\nimport { TrainingProgress } from '../../model/trainingProgress';\nimport configuration from './examinationStrategy.config';\nimport SelectionStrategy from './selectionStrategy';\n\nconst getPriority: SelectionStrategy = ({ score, lastTried }: TrainingProgress): number => {\n  const gap = getDifferenceFromNowInSeconds(lastTried);\n\n  if (score === configuration.score && gap > configuration.minGap) {\n    return gap;\n  } else {\n    return 0;\n  }\n};\n\nexport default getPriority;\n","const configuration = [\n  { score: 0, frequency: 16, minGap: 60 },\n  { score: 1, frequency: 8, minGap: 5*60 },\n  { score: 2, frequency: 4, minGap: 30*60 },\n  { score: 3, frequency: 2, minGap: 3*60*60 },\n  { score: 4, frequency: 1, minGap: 24*60*60 },\n];\n\nexport default configuration;\n","import { getDifferenceFromNowInSeconds } from '../../../../util/time';\nimport { TrainingProgress } from '../../model/trainingProgress';\nimport configuration from './learningStrategy.config';\nimport SelectionStrategy from './selectionStrategy';\n\nconst getPriority: SelectionStrategy = ({ score, lastTried }: TrainingProgress): number => {\n  const config = configuration.find(c => c.score === score);\n  const gap = getDifferenceFromNowInSeconds(lastTried);\n\n  if (config !== undefined && gap > config.minGap) {\n    return config.frequency;\n  } else {\n    return 0;\n  }\n};\n\nexport default getPriority;\n","import { TrainingMode } from '../../model/trainingMode';\nimport examinationStrategy from './examinationStrategy';\nimport learningStrategy from './learningStrategy';\nimport SelectionStrategy from './selectionStrategy';\n\nconst selectionStrategyFactory = (mode: TrainingMode): SelectionStrategy => {\n  switch (mode) {\n  case TrainingMode.Examination:\n    return examinationStrategy;\n  case TrainingMode.Learning:\n    return learningStrategy;\n  default:\n    throw new Error(`Unknown mode ${mode}`);\n  }\n};\n\nexport default selectionStrategyFactory;\n","const selectRandom = <T> (\n  elements: T[],\n  weightProjection: (el: T) => number,\n  rand = Math.random()\n): T | null => {\n  const weights = elements.map(el => weightProjection(el));\n  const elementUpperBounds = buildPartialSums(weights);\n  const totalWeight = getLast(elementUpperBounds, 0);\n\n  if (totalWeight === 0) {\n    return null;\n  }\n\n  const selectedValue = rand * totalWeight;\n  const selectedIndex = elementUpperBounds.findIndex(sum => selectedValue <= sum);\n  return elements[selectedIndex];\n};\n\nconst buildPartialSums = (values: number[]): number[] => {\n  const partialSums = new Array(values.length);\n  let ongoingSum = 0;\n  for (let i = 0; i < values.length; i++) {\n    ongoingSum += values[i];\n    partialSums[i] = ongoingSum;\n  }\n  return partialSums;\n};\n\nconst getLast = <T> (array: T[], defaultValue: T): T => {\n  if (array.length > 0) {\n    return array.slice(-1)[0];\n  } else {\n    return defaultValue;\n  }\n};\n\nexport default selectRandom;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { conjugateDe } from '../../grammar/de/conjugation';\nimport { conjugateEn } from '../../grammar/en/conjugation';\nimport { conjugateFa } from '../../grammar/fa/conjugation';\nimport { conjugateFaRm } from '../../grammar/faRm/conjugation';\nimport { Person } from '../../grammar/model/verbForm';\nimport { Verb, Word } from '../../lexicon/model/word';\nimport { selectWords } from '../../lexicon/selectors';\nimport { normalizeDe, normalizeEn, normalizeFa, normalizeFaRm } from '../../lexicon/util';\nimport { PrioritizedEntity } from '../model/prioritizedEntity';\nimport { TrainingMode } from '../model/trainingMode';\nimport { ProgressAggregate, TrainingProgress } from '../model/trainingProgress';\nimport { Trainer, UnscoredTrainingUnit } from '../model/trainingUnit';\nimport SelectionStrategy from './selection/selectionStrategy';\nimport selectionStrategyFactory from './selection/selectionStrategyFactory';\nimport selectRandom from './selectRandom';\nimport { buildEmptyTrainingProgress, getTrainingProgress } from './trainingProgress';\n\nexport interface State {\n  currentTrainingUnit: UnscoredTrainingUnit | null;\n  progress: Record<number, ProgressAggregate>;\n}\n\nconst initialState: State = {\n  currentTrainingUnit: null,\n  progress: {},\n};\n\nexport const select = createAsyncThunk(\n  'train/select',\n  (trainingMode: TrainingMode, { getState }) => ({\n    words: selectWords(getState()),\n    trainingMode,\n  })\n);\n\ninterface SelectPayload {\n  words: Word[];\n  trainingMode: TrainingMode;\n}\n\nconst slice = createSlice({\n  name: 'train',\n  initialState,\n  reducers: {\n    pass: (state: State): void => {\n      const progress = getProgress(state);\n      progress.score = Math.min(progress.score + 1, 5);\n      progress.lastCorrect = new Date().toISOString();\n      progress.lastTried = progress.lastCorrect;\n    },\n    fail: (state: State): void => {\n      const progress = getProgress(state);\n      progress.score = Math.max(progress.score - 1, 0);\n      progress.lastTried = new Date().toISOString();\n    }\n  },\n  extraReducers: {\n    [select.fulfilled.type]: (state, { payload: { words, trainingMode } }: PayloadAction<SelectPayload>): void => {\n      const { progress } = state;\n      const selectionStrategy = selectionStrategyFactory(trainingMode);\n\n      const prioritizedUnits = words\n        .map(word => buildPrioritizedUnits(word, progress, selectionStrategy))\n        .flat();\n      const selectedUnit = selectRandom(prioritizedUnits, unit => unit.priority);\n      state.currentTrainingUnit = extractUnscoredTrainingUnit(selectedUnit);\n    }\n  }\n});\n\nconst getProgress = ({ currentTrainingUnit, progress }: State): TrainingProgress => {\n  if (currentTrainingUnit === null) {\n    throw new Error('No training unit selected');\n  }\n\n  if (progress[currentTrainingUnit.id] === undefined) {\n    progress[currentTrainingUnit.id] = {};\n  }\n  if (progress[currentTrainingUnit.id][currentTrainingUnit.trainer] === undefined) {\n    progress[currentTrainingUnit.id][currentTrainingUnit.trainer] = buildEmptyTrainingProgress();\n  }\n\n  return getTrainingProgress(progress, currentTrainingUnit.id, currentTrainingUnit.trainer);\n};\n\nconst buildPrioritizedUnits = (\n  word: Word,\n  progress: Record<number, ProgressAggregate>,\n  selectionStrategy: SelectionStrategy\n): PrioritizedEntity<UnscoredTrainingUnit>[] => {\n  return buildTrainingUnits(word).map(unit => ({\n    entity: unit,\n    priority: selectionStrategy(getTrainingProgress(progress, word.id, unit.trainer))\n  }));\n};\n\nconst buildTrainingUnits = (word: Word): UnscoredTrainingUnit[] => {\n  const trainers: UnscoredTrainingUnit[] = [\n    buildNormalTrainingUnit(word, 'de'),\n    buildNormalTrainingUnit(word, 'fa')\n  ];\n\n  if (word.type === 'verb') {\n    trainers.push(\n      buildConjugationTrainingUnit(word, 'deConj'),\n      buildConjugationTrainingUnit(word, 'faConj')\n    );\n  }\n\n  return trainers;\n};\n\nconst buildNormalTrainingUnit = (word: Word, trainer: Trainer): UnscoredTrainingUnit => {\n  return {\n    id: word.id,\n    trainer,\n    de: normalizeDe(word),\n    en: normalizeEn(word),\n    fa: normalizeFa(word),\n    faRm: normalizeFaRm(word),\n  };\n};\n\nconst buildConjugationTrainingUnit = (word: Verb, trainer: Trainer): UnscoredTrainingUnit => {\n  const person = pickRandomPerson();\n  return {\n    id: word.id,\n    trainer,\n    de: conjugateDe(word.de, { person, tense: 'present' }),\n    en: conjugateEn(word.en, { person, tense: 'present' }),\n    fa: conjugateFa(word.fa, { person, tense: 'present' }),\n    faRm: conjugateFaRm(word.faRm, { person, tense: 'present' }),\n  };\n};\n\nconst pickRandomPerson = (): Person => {\n  const result = selectRandom<Person>(['1s', '2s', '3s', '1p', '2p', '3p'], () => 1);\n  if (result !== null) {\n    return result;\n  } else {\n    throw new Error('Error while picking a random person for conjugation');\n  }\n};\n\nconst extractUnscoredTrainingUnit = (unit: PrioritizedEntity<UnscoredTrainingUnit> | null): UnscoredTrainingUnit | null => {\n  if (unit !== null) {\n    const { id, trainer, de, en, fa, faRm } = unit.entity;\n    return { id, trainer, de, en, fa, faRm };\n  } else {\n    return null;\n  }\n};\n\nexport const { pass, fail } = slice.actions;\nexport default slice.reducer;\n","import React from 'react';\nimport { Dash, Plus } from '../../../../components/Icons';\n\nexport class ToggleText extends React.Component<{\n  title: string;\n  value: string;\n}, {\n  expanded: boolean;\n}> {\n  state = {\n    expanded: false,\n  };\n\n  render(): JSX.Element {\n    const { title, value } = this.props;\n    if (this.state.expanded) {\n      return (\n        <div className=\"cursor-pointer\"\n          onClick={(): void => this.setState({ expanded: false })}\n        >\n          <Dash></Dash> {title}: <em>{value}</em>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"cursor-pointer\"\n          onClick={(): void => this.setState({ expanded: true })}\n        >\n          <Plus></Plus> {title}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { TestStage } from '../../model/testStage';\nimport { TrainingUnit } from '../../model/trainingUnit';\nimport { ScoreBadge } from '../ScoreBadge/ScoreBadge';\n\nexport abstract class BaseTrainer extends React.Component<{\n  unit: TrainingUnit;\n  fail: () => void;\n  next: () => void;\n  pass: () => void;\n}, {\n  enteredTranslation: string;\n  stage: TestStage;\n}> {\n  private inputRef = React.createRef<HTMLInputElement>();\n  private submitRef = React.createRef<HTMLButtonElement>();\n\n  state = {\n    enteredTranslation: '',\n    stage: TestStage.Initial,\n  };\n\n  componentDidUpdate(): void {\n    if (this.inputRef.current) {\n      this.inputRef.current.focus();\n    } else if (this.submitRef.current) {\n      this.submitRef.current.focus();\n    }\n  }\n\n  render(): JSX.Element {\n    const { unit } = this.props;\n    return (\n      <form onSubmit={(e): void => this.submit(e)}>\n        {this.renderTask(unit)}\n        {this.isShowSolution()\n          ? this.renderSolution(unit, this.renderSolutionContent())\n          : this.renderSolutionInput()\n        }\n        {this.renderButtons()}\n      </form>\n    );\n  }\n\n  protected abstract renderTask(unit: TrainingUnit): JSX.Element;\n  protected abstract renderSolution(unit: TrainingUnit, content: JSX.Element): JSX.Element;\n\n  private renderSolutionContent(): JSX.Element {\n    const { unit } = this.props;\n    return (\n      <React.Fragment>\n        {this.isWrongSolution() && (\n          <React.Fragment>\n            <span className=\"text-danger text-decoration-line-through\">\n              {this.state.enteredTranslation}\n            </span>\n            <span> </span>\n          </React.Fragment>\n        )}\n        <span className={this.isCountingAsSuccess() || this.isWrongSolution() ? 'text-success' : 'text-warning'}>\n          {this.getCorrectSolution()}\n          <ScoreBadge score={unit.score}\n            decreased={this.isCountingAsFailure()}\n            increased={this.isCountingAsSuccess()}\n          ></ScoreBadge>\n        </span>\n      </React.Fragment>\n    );\n  }\n\n  private renderSolutionInput(): JSX.Element {\n    const { label, large, rtl } = this.getSolutionInputConfig();\n    return (\n      <div className=\"mb-3\">\n        <label htmlFor=\"solution\">\n          {label}\n        </label>\n        <input type=\"text\"\n          id=\"solution\"\n          className={`form-control${large ? ' text-large' : ''}${rtl ? ' text-rtl' : ''}`}\n          value={this.state.enteredTranslation}\n          ref={this.inputRef}\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          onChange={(e): void => this.setState({ enteredTranslation: e.target.value })}\n        >\n        </input>\n        <div className=\"form-text\">\n          &nbsp;\n        </div>\n      </div>\n    );\n  }\n\n  protected abstract getSolutionInputConfig(): SolutionInputConfig;\n\n  private renderButtons(): JSX.Element {\n    if (this.isShowSolution()) {\n      return (\n        <div className=\"col\">\n          <button type=\"submit\"\n            className=\"btn btn-primary w-100\"\n            key=\"proceed-btn\"\n            ref={this.submitRef}\n          >\n            Weiter\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"row mb-2\">\n            <div className=\"col-6 col-sm-4\">\n              <button type=\"button\"\n                className=\"btn btn-secondary w-100\"\n                key=\"solve-btn\"\n                onClick={(): void => this.solve()}\n              >\n                Auflösen\n              </button>\n            </div>\n            <div className=\"col-6 col-sm-8\">\n              <button type=\"submit\"\n                className={`btn ${this.isCountingAsFailure() ? 'btn-warning' : 'btn-primary'} w-100`}\n                key=\"chck-btn\"\n                ref={this.submitRef}\n              >\n                Überprüfen\n              </button>\n            </div>\n          </div>\n          {this.state.stage === TestStage.Initial\n            ? (\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button type=\"button\"\n                    className=\"btn btn-link w-100\"\n                    key=\"skip-btn\"\n                    onClick={(): void => this.proceed()}\n                  >\n                    Überspringen\n                  </button>\n                </div>\n              </div>\n            ) : ''\n          }\n        </React.Fragment>\n      );\n    }\n  }\n\n  private submit(event: React.FormEvent): void {\n    event.preventDefault();\n    if (this.isShowSolution()) {\n      this.proceed();\n    } else {\n      this.check();\n    }\n  }\n\n  private proceed(): void {\n    this.props.next();\n    this.setState({\n      enteredTranslation: '',\n      stage: TestStage.Initial,\n    });\n  }\n\n  private check(): void {\n    const pass = !this.isWrongSolution();\n    this.reportResult(pass);\n    this.setState({ stage: this.getStageAfterCheck(pass) });\n  }\n\n  private getStageAfterCheck(pass: boolean): TestStage {\n    if (!pass) {\n      return TestStage.Retry;\n    } else if (this.state.stage === TestStage.Initial) {\n      return TestStage.Passed;\n    } else {\n      return TestStage.PassedOnRetry;\n    }\n  }\n\n  private solve(): void {\n    this.reportResult(false);\n    this.setState({ stage: TestStage.Failed });\n  }\n\n  private reportResult(pass: boolean): void {\n    if (this.state.stage !== TestStage.Initial) {\n      return;\n    } else if (pass) {\n      this.props.pass();\n    } else {\n      this.props.fail();\n    }\n  }\n\n  private isShowSolution(): boolean {\n    return [\n      TestStage.Passed,\n      TestStage.PassedOnRetry,\n      TestStage.Failed,\n    ].includes(this.state.stage);\n  }\n\n  private isWrongSolution(): boolean {\n    return this.state.enteredTranslation !== this.getCorrectSolution();\n  }\n\n  protected abstract getCorrectSolution(): string;\n\n  private isCountingAsSuccess(): boolean {\n    return [\n      TestStage.Passed,\n    ].includes(this.state.stage);\n  }\n\n  private isCountingAsFailure(): boolean {\n    return [\n      TestStage.PassedOnRetry,\n      TestStage.Retry,\n      TestStage.Failed,\n    ].includes(this.state.stage);\n  }\n}\n","import React from 'react';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { TrainingUnit } from '../../model/trainingUnit';\nimport { ToggleText } from '../ToggleText/ToggleText';\nimport { BaseTrainer } from './BaseTrainer';\n\nexport class FarsiTrainer extends BaseTrainer {\n  renderTask(unit: TrainingUnit): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Deutsch\n        </div>\n        <div className=\"form-control-plaintext fw-bold\">\n          {unit.de}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Englisch\" value={unit.en}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  renderSolution(unit: TrainingUnit, content: JSX.Element): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>Persisch</div>\n        <div className=\"form-control-plaintext text-large text-rtl\">\n          {content}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Romanisierung\" value={unit.faRm}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  getSolutionInputConfig(): SolutionInputConfig {\n    return {\n      label: 'Persisch',\n      large: true,\n      rtl: true,\n    };\n  }\n\n  getCorrectSolution(): string {\n    return this.props.unit.fa;\n  }\n}\n","import React from 'react';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { TrainingUnit } from '../../model/trainingUnit';\nimport { ToggleText } from '../ToggleText/ToggleText';\nimport { BaseTrainer } from './BaseTrainer';\n\nexport class GermanTrainer extends BaseTrainer {\n  renderTask(unit: TrainingUnit): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Persisch\n        </div>\n        <div className=\"form-control-plaintext text-large text-rtl\">\n          {unit.fa}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Romanisierung\" value={unit.faRm}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  renderSolution(unit: TrainingUnit, content: JSX.Element): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Deutsch\n        </div>\n        <div className=\"form-control-plaintext\">\n          {content}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Englisch\" value={unit.en}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  getSolutionInputConfig(): SolutionInputConfig {\n    return {\n      label: 'Deutsch',\n      large: false,\n      rtl: false,\n    };\n  }\n\n  getCorrectSolution(): string {\n    return this.props.unit.de;\n  }\n}\n","import React, { FormEvent } from 'react';\nimport { HourglassSplit } from '../../../../components/Icons';\nimport './NoTraining.scss';\n\nexport const NoTraining = (props: {\n  next: () => void;\n}): JSX.Element => (\n  <form onSubmit={(e: FormEvent): void => { e.preventDefault(); props.next(); }}>\n    <div className=\"no-training\">\n      <HourglassSplit></HourglassSplit>\n      <p>Zur Zeit gibt es nichts zu üben.</p>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Aktualisieren\n      </button>\n    </div>\n  </form>\n);\n","import React from 'react';\nimport { TrainingMode } from '../../model/trainingMode';\nimport { TrainingUnit } from '../../model/trainingUnit';\nimport { FarsiTrainer } from '../LangTrainer/FarsiTrainer';\nimport { GermanTrainer } from '../LangTrainer/GermanTrainer';\nimport { NoTraining } from '../NoTraining/NoTraining';\n\nexport class Trainer extends React.Component<{\n  unit: TrainingUnit | null;\n  trainingMode: TrainingMode;\n  fail: () => void;\n  next: (trainingMode: TrainingMode) => void;\n  pass: () => void;\n}> {\n  componentDidMount(): void {\n    this.selectNextUnit();\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <h2>\n          {this.props.trainingMode === TrainingMode.Learning ? 'Training' : 'Wiederholung'}\n        </h2>\n        {this.renderBody()}\n      </React.Fragment>\n    );\n  }\n\n  renderBody(): JSX.Element {\n    const { unit, fail, pass } = this.props;\n    if (unit?.trainer === 'de' || unit?.trainer === 'deConj') {\n      return <GermanTrainer\n        unit={unit}\n        pass={pass}\n        fail={fail}\n        next={(): void => this.selectNextUnit()}\n      ></GermanTrainer>;\n    } else if (unit?.trainer === 'fa' || unit?.trainer === 'faConj') {\n      return <FarsiTrainer\n        unit={unit}\n        pass={pass}\n        fail={fail}\n        next={(): void => this.selectNextUnit()}\n      ></FarsiTrainer>;\n    } else {\n      return <NoTraining\n        next={(): void => this.selectNextUnit()}\n      ></NoTraining>;\n    }\n  }\n\n  private selectNextUnit(): void {\n    this.props.next(this.props.trainingMode);\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { connect } from 'react-redux';\nimport { TrainingMode } from '../../model/trainingMode';\nimport { selectCurrentTrainingUnit } from '../../selectors';\nimport { fail, pass, select } from '../../slice';\nimport { Trainer } from './Trainer';\n\nconst mapStateToProps = (trainingMode: TrainingMode) => (state: any) => ({\n  unit: selectCurrentTrainingUnit(state),\n  trainingMode\n});\n\nconst mapDispatchToProps = {\n  fail: fail,\n  next: select,\n  pass: pass,\n};\n\nexport const TrainerContainer = (trainingMode: TrainingMode) =>\n  connect(mapStateToProps(trainingMode), mapDispatchToProps)(Trainer);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { TrainerContainer } from '../components/Trainer/TrainerContainer';\nimport { TrainingMode } from '../model/trainingMode';\n\nexport default [\n  <Route key=\"trainerLearn\"\n    path=\"/trainer/learn\"\n    component={TrainerContainer(TrainingMode.Learning)}>\n  </Route>,\n  <Route key=\"trainerExam\"\n    path=\"/trainer/exam\"\n    component={TrainerContainer(TrainingMode.Examination)}>\n  </Route>,\n  <Redirect key=\"trainerRoot\"\n    from=\"/trainer\"\n    to=\"/trainer/learn\">\n  </Redirect>,\n];\n","import React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport dictionaryRoutes from '../features/dictionary/routes';\nimport settingsRoutes from '../features/settings/routes';\nimport trainerRoutes from '../features/trainer/routes';\n\nexport default (\n  <Switch>\n    {dictionaryRoutes},\n    {settingsRoutes},\n    {trainerRoutes},\n    <Redirect key=\"root\" to=\"/trainer\">\n    </Redirect>\n  </Switch>\n);\n","import { Collapse } from 'bootstrap';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\nimport { Book, Check2Square, Lightning, Tools } from './Icons';\n\nexport class Header extends React.Component {\n  private collapseRef = React.createRef<HTMLDivElement>();\n  private collapse?: Collapse;\n\n  componentDidMount(): void {\n    if (this.collapseRef.current) {\n      this.collapse = new Collapse(this.collapseRef.current, {\n        toggle: false\n      });\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <nav className=\"header navbar navbar-expand-md navbar-dark bg-primary mb-2\">\n        <div className=\"container\">\n          <span className=\"navbar-brand mb-0 h1\">\n            Persian Learner\n          </span>\n          <button type=\"button\"\n            className=\"navbar-toggler\"\n            onClick={(): void => this.collapse?.toggle()}\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            id=\"navbar-content\"\n            className=\"collapse navbar-collapse\"\n            ref={this.collapseRef}\n          >\n            <ul className=\"navbar-nav mb-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/trainer/learn\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Lightning></Lightning>\n                  Training\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/trainer/exam\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Check2Square></Check2Square>\n                  Wiederholung\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/dictionary\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Book></Book>\n                  Wörterbuch\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/settings\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Tools></Tools>\n                  Einstellungen\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastrContainer } from '../features/notification/components/Toastr/ToastrContainer';\nimport routes from '../routes';\nimport { Header } from './Header';\n\nexport class App extends React.Component {\n  render(): JSX.Element {\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASE_HREF}>\n        <header>\n          <Header></Header>\n        </header>\n        <main className=\"container\">\n          { routes }\n          <ToastrContainer></ToastrContainer>\n        </main>\n      </BrowserRouter>\n    );\n  }\n}\n","import { PersistedState } from 'redux-persist';\nimport { State } from '../reducers';\n\nexport default (state: PersistedState): PersistedState => {\n  return migrateState(state) as unknown as PersistedState;\n};\n\nconst migrateState = (oldState: any): State => {\n  return {\n    dictionary: oldState.dictionary,\n    lexicon: {\n      words: oldState.lexicon.units,\n    },\n    notification: oldState.notification,\n    trainer: {\n      currentTrainingUnit: null,\n      progress: oldState.trainer.trainingProgress,\n    },\n  };\n};\n","import { PersistedState } from 'redux-persist';\nimport vocabulary from '../data/vocabulary.json';\nimport { Word } from '../features/lexicon/model/word';\nimport { ProgressAggregate } from '../features/trainer/model/trainingProgress';\nimport { UnscoredTrainingUnit } from '../features/trainer/model/trainingUnit';\nimport { State } from '../reducers';\n\ninterface LexiconMigration {\n  added: Word[];\n  updated: Word[];\n  deleted: Word[];\n}\n\nexport default (state: PersistedState): PersistedState => {\n  const _state = state as unknown as State;\n  return migrateLexicon(_state) as unknown as PersistedState;\n};\n\nconst migrateLexicon = (state: State): State => {\n  const migration = buildMigration(state.lexicon.words);\n\n  return {\n    ...state,\n    lexicon: {\n      ...state.lexicon,\n      words: migrateWords(state.lexicon.words, migration),\n    },\n    trainer: {\n      ...state.trainer,\n      currentTrainingUnit: migrateTrainingUnit(state.trainer.currentTrainingUnit, migration),\n      progress: migrateProgress(state.trainer.progress, migration),\n    },\n  };\n};\n\nconst buildMigration = (persistedWordRecord: Record<number, Word>): LexiconMigration => {\n  const persistedWords = Object.values(persistedWordRecord);\n  const expectedWords = vocabulary as Word[];\n  const expectedWordRecord = Object.fromEntries(\n    vocabulary.map(v => [v.id, v])\n  );\n\n  return {\n    added: expectedWords.filter(u => !(u.id in persistedWordRecord)),\n    updated: expectedWords.filter(u => (u.id in persistedWordRecord) && !isEqual(u, persistedWordRecord[u.id])),\n    deleted: persistedWords.filter(u => !(u.id in expectedWordRecord)),\n  };\n};\n\nconst isEqual = (a: Word | undefined, b: Word | undefined): boolean => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nconst migrateWords = (persisted: Record<number, Word>, migration: LexiconMigration): Record<number, Word> => {\n  const result = { ...persisted };\n  migration.added.forEach(u => result[u.id] = u);\n  migration.updated.forEach(u => result[u.id] = u);\n  migration.deleted.forEach(u => delete result[u.id]);\n  return result;\n};\n\nconst migrateTrainingUnit = (persisted: UnscoredTrainingUnit | null, { deleted }: LexiconMigration): UnscoredTrainingUnit | null => {\n  if (deleted.some(el => el.id === persisted?.id)) {\n    return null;\n  } else {\n    return persisted;\n  }\n};\n\nconst migrateProgress = (persisted: Record<number, ProgressAggregate>, migration: LexiconMigration): Record<number, ProgressAggregate> => {\n  const result = { ...persisted };\n  migration.updated.forEach(w => delete result[w.id]);\n  migration.deleted.forEach(w => delete result[w.id]);\n  return result;\n};\n","import { createMigrate, PersistedState } from 'redux-persist';\nimport migrationToV2 from './2-addVerbDetails';\nimport lexiconMigration from './lexiconMigration';\n\nconst migrate = (state: PersistedState, version: number): Promise<PersistedState> => {\n  // skip migrations on initial load\n  if (state === undefined) {\n    return Promise.resolve(undefined as any);\n  }\n\n  return createMigrate({\n    2: migrationToV2\n  })(state, version)\n    .then(lexiconMigration);\n};\n\nexport default migrate;\n","import { createSlice } from '@reduxjs/toolkit';\nimport vocabulary from '../../../data/vocabulary.json';\nimport { Word } from '../model/word';\n\nexport interface State {\n  words: Record<number, Word>;\n}\n\nconst initialState: State = {\n  words: Object.fromEntries(\n    (vocabulary as Word[]).map(w => [w.id, w])\n  )\n};\n\nconst slice = createSlice({\n  name: 'lexicon',\n  initialState,\n  reducers: {\n  }\n});\n\nexport default slice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport dictionary, { State as DictionaryState } from '../features/dictionary/slice';\nimport lexicon, { State as LexiconState } from '../features/lexicon/slice';\nimport notification, { State as NotificationState } from '../features/notification/slice';\nimport trainer, { State as TrainerState } from '../features/trainer/slice';\n\nexport interface State {\n  dictionary: DictionaryState;\n  lexicon: LexiconState;\n  notification: NotificationState;\n  trainer: TrainerState;\n}\n\nconst rootReducer = combineReducers({\n  dictionary,\n  lexicon,\n  notification,\n  trainer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Single Page Apps for GitHub Pages\n// MIT License\n// https://github.com/rafgraph/spa-github-pages\n// This script checks to see if a redirect is present in the query string,\n// converts it back into the correct url and adds it to the\n// browser's history using window.history.replaceState(...),\n// which won't cause the browser to attempt to load the new url.\n// When the single page app is loaded further down in this file,\n// the correct url will be waiting in the browser's history for\n// the single page app to route accordingly.\n\nexport default (): void => {\n  const location = window.location;\n  if (location.search[1] === '/' ) {\n    const decoded = location.search\n      .slice(1)\n      .split('&')\n      .map((s) => s.replace(/~and~/g, '&'))\n      .join('?');\n    const replaceUrl = location.pathname.slice(0, -1) + decoded + location.hash;\n    window.history.replaceState(null, null as any, replaceUrl);\n  }\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport { version } from '../package.json';\nimport { App } from './components/App';\nimport decodeUrl from './decodeUrl';\nimport { addNotification } from './features/notification/slice';\nimport './index.scss';\nimport migrate from './migrations';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  decodeUrl();\n}\n\nconst persistedReducer = persistReducer({\n  key: 'root',\n  migrate,\n  storage,\n  version: 2,\n}, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <span className=\"version\" hidden>\n      {version}-{process.env.NODE_ENV}\n    </span>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register({\n  onSuccess: () => store.dispatch(addNotification('Caching abgeschlossen. Die App funktioniert jetzt auch offline!')),\n  onUpdate: () => store.dispatch(addNotification('Neue Version verfügbar. Zum Update bitte alle Tabs der App schließen!')),\n});\n"],"sourceRoot":""}