{"version":3,"sources":["features/dictionary/model/visibilityState.ts","features/notification/selectors/index.ts","features/notification/slice/index.ts","features/notification/components/Toast/Toast.tsx","features/notification/components/Toastr/ToastrContainer.tsx","features/notification/components/Toastr/Toastr.tsx","features/lexicon/selectors/index.ts","util/record.ts","features/trainer/slice/trainingProgress.ts","features/trainer/selectors/index.ts","features/dictionary/selectors/index.ts","features/dictionary/slice/index.ts","components/Icons.tsx","features/trainer/model/trainingMode.ts","features/trainer/components/ScoreBadge/ScoreBadge.tsx","features/dictionary/components/DictionaryDetails/DictionaryDetails.tsx","features/dictionary/components/DictionaryAccordeon/DictionaryAccordeon.tsx","features/dictionary/components/DictionarySearch/DictionarySearch.tsx","features/dictionary/components/Dictionary/Dictionary.tsx","features/dictionary/components/Dictionary/DictionaryContainer.tsx","features/dictionary/routes/index.tsx","features/settings/components/Settings/Settings.tsx","util/file.ts","features/settings/routes/index.tsx","features/trainer/model/testStage.ts","util/time.ts","features/trainer/slice/selection/examinationStrategy.config.ts","features/trainer/slice/selection/examinationStrategy.ts","features/trainer/slice/selection/learningStrategy.config.ts","features/trainer/slice/selection/learningStrategy.ts","features/trainer/slice/selection/selectionStrategyFactory.ts","features/trainer/slice/selectRandom.ts","features/trainer/slice/index.ts","features/trainer/components/ToggleText/ToggleText.tsx","features/trainer/components/LangTrainer/BaseTrainer.tsx","features/trainer/components/LangTrainer/FarsiTrainer.tsx","features/trainer/components/LangTrainer/GermanTrainer.tsx","features/trainer/components/NoTraining/NoTraining.tsx","features/trainer/components/Trainer/Trainer.tsx","features/trainer/components/Trainer/TrainerContainer.tsx","features/trainer/routes/index.tsx","routes/index.tsx","components/Header.tsx","components/App.tsx","migrations/lexiconMigration.ts","migrations/index.ts","features/lexicon/slice/index.ts","reducers/index.ts","serviceWorker.ts","decodeUrl.ts","index.tsx"],"names":["VisibilityState","selectSlice","state","notification","selectNotifications","createSelector","notifications","slice","createSlice","name","initialState","nextId","reducers","addNotification","payload","push","id","message","removeNotification","filter","n","actions","Toast","toastRef","React","createRef","height","toastEl","this","current","BootstrapToast","show","addEventListener","setState","duration","easing","onAnimationEnd","props","clear","className","role","aria-live","aria-atomic","ref","type","data-dismiss","aria-label","Component","mapDispatchToProps","ToastrContainer","connect","map","key","lexicon","selectLearningUnitRecord","units","selectLearningUnits","Object","values","getKey","record","undefined","result","buildEmptyProgress","de","buildEmptyLangProgress","fa","score","lastCorrect","lastTried","trainer","selectTrainingProgress","trainingProgress","selectCurrentLanguage","trainingUnit","lang","selectCurrentLearningUnit","selectCurrentTrainingProgress","selectCurrentLangProgress","dictionary","selectFilter","selectDictionary","learningUnits","unit","unitMatchesFilter","buildDictionaryEntry","searchTerm","en","removeShortVowels","faRm","some","term","toLowerCase","includes","trim","text","replace","scoreDe","scoreFa","searchDictionary","ArrowDown","width","viewBox","fill","xmlns","fillRule","d","ArrowUp","Book","Check2Square","ChevronDown","Dash","FileEarmarkArrowDown","HourglassSplit","Lightning","Plus","Tools","X","TrainingMode","ScoreBadge","increased","decreased","DictionaryDetails","entry","formatType","DictionaryAccordeon","details","Hidden","Fragment","renderRow","renderDetails","Visible","onClick","toggleDetails","colSpan","endAnimation","hideDetails","showDetails","Transitioning","setTimeout","DictionarySearch","searchRef","currentSearch","placeholder","value","onChange","updateSearchTerm","resetSearchTerm","search","Dictionary","entries","s","e","DictionaryContainer","path","component","Settings","title","exportDatabase","timestamp","format","Date","database","JSON","stringify","localStorage","content","event","document","createEvent","initEvent","anchor","createElement","setAttribute","encodeURIComponent","dispatchEvent","downloadFile","TestStage","getDifferenceFromNowInSeconds","date","differenceInSeconds","Number","POSITIVE_INFINITY","configuration","minGap","getPriority","gap","frequency","config","find","c","selectionStrategyFactory","mode","Examination","examinationStrategy","Learning","learningStrategy","Error","buildPartialSums","partialSums","Array","length","ongoingSum","i","getLast","array","defaultValue","selectRandom","elements","weightProjection","rand","Math","random","weights","el","elementUpperBounds","totalWeight","selectedValue","selectedIndex","findIndex","sum","select","createAsyncThunk","trainingMode","getState","pass","progress","getLangProgress","min","toISOString","fail","max","extraReducers","fulfilled","selectionStrategy","trainingUnits","buildTrainingUnits","flat","selectedUnit","priority","extractTrainingUnit","languages","ToggleText","expanded","BaseTrainer","inputRef","submitRef","enteredTranslation","stage","Initial","focus","onSubmit","submit","renderTask","isShowSolution","renderSolution","renderSolutionContent","renderSolutionInput","renderButtons","isWrongSolution","isCountingAsSuccess","getCorrectSolution","isCountingAsFailure","getSolutionInputConfig","label","large","htmlFor","autoComplete","autoCorrect","autoCapitalize","target","solve","proceed","preventDefault","check","next","reportResult","getStageAfterCheck","Passed","PassedOnRetry","Retry","Failed","FarsiTrainer","GermanTrainer","NoTraining","Trainer","selectNextUnit","renderBody","TrainerContainer","mapStateToProps","from","to","dictionaryRoutes","settingsRoutes","trainerRoutes","Header","collapseRef","collapse","Collapse","toggle","hide","App","basename","process","routes","buildMigration","persistedUnitRecord","persistedUnits","expectedUnits","vocabulary","expectedUnitRecord","fromEntries","v","added","u","updated","isEqual","deleted","a","b","migrateUnitsTrainingProgress","persisted","migration","forEach","migrateTrainingUnit","migrateTrainingProgress","lexiconMigration","migrate","Promise","resolve","rootReducer","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","decoded","split","join","replaceUrl","pathname","hash","history","replaceState","decodeUrl","persistedReducer","persistReducer","storage","version","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","hidden","loading","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","dispatch"],"mappings":"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","file":"static/js/main.b1bef7af.chunk.js","sourcesContent":["export enum VisibilityState {\n  Visible,\n  Hidden,\n  Transitioning,\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.notification;\nexport default selectSlice;\n\nexport const selectNotifications = createSelector([selectSlice], ({ notifications }) => notifications);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { Notification } from '../model/notification';\n\nexport interface State {\n  nextId: number;\n  notifications: Notification[];\n}\n\nconst initialState: State = {\n  nextId: 0,\n  notifications: [],\n};\n\nconst slice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    addNotification: (state: State, { payload }: { payload: string }): void => {\n      state.notifications.push({ id: state.nextId, message: payload });\n      state.nextId++;\n    },\n    removeNotification: (state: State, { payload }: { payload: number }): void => {\n      state.notifications = state.notifications.filter(n => n.id !== payload);\n    },\n  },\n});\n\nexport const { addNotification, removeNotification } = slice.actions;\nexport default slice.reducer;\n","import { Toast as BootstrapToast } from 'bootstrap';\nimport React from 'react';\nimport AnimateHeight from 'react-animate-height';\n\nexport class Toast extends React.Component<{\n  message: string;\n  clear: () => void;\n}, {\n  height: string | number;\n}> {\n  private toastRef = React.createRef<HTMLDivElement>();\n\n  state = {\n    height: 'auto'\n  };\n\n  componentDidMount(): void {\n    const toastEl = this.toastRef.current;\n    if (toastEl) {\n      const toast = new BootstrapToast(toastEl) as BootstrapToast & { show: () => void };\n      toast.show();\n      toastEl.addEventListener('hidden.bs.toast', () => this.setState({ height: 0 }));\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <AnimateHeight\n        height={this.state.height}\n        duration={300}\n        easing=\"ease-out\"\n        onAnimationEnd={(): void => this.props.clear()}\n      >\n        <div className=\"toast d-flex align-items-center bg-primary text-white\"\n          role=\"alert\"\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n          ref={this.toastRef}\n        >\n          <div className=\"toast-body\">\n            {this.props.message}\n          </div>\n          <button type=\"button\"\n            className=\"btn-close ml-auto mr-2\"\n            data-dismiss=\"toast\"\n            aria-label=\"Schließen\"\n          ></button>\n        </div>\n      </AnimateHeight>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { Notification } from '../../model/notification';\nimport { selectNotifications } from '../../selectors';\nimport { removeNotification } from '../../slice';\nimport { Toastr } from './Toastr';\n\nconst mapStateToProps = (state: any): any => ({\n  notifications: selectNotifications(state),\n});\n\nconst mapDispatchToProps = {\n  clear: removeNotification,\n};\n\nexport const ToastrContainer =\n  connect<{ notifications: Notification[] }, { clear: (id: number) => void }, {}>(mapStateToProps, mapDispatchToProps)(Toastr);\n","import React from 'react';\nimport { Notification } from '../../model/notification';\nimport { Toast } from '../Toast/Toast';\nimport './Toastr.scss';\n\nexport const Toastr = ({ notifications, clear }: {\n  notifications: Notification[];\n  clear: (idx: number) => void;\n}): JSX.Element => (\n  <div className=\"toastr\">\n    {notifications.map(notification => (\n      <Toast\n        clear={(): void => clear(notification.id)}\n        message={notification.message}\n        key={`toast-${notification.id}`}\n      ></Toast>\n    ))}\n  </div>\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.lexicon;\nexport default selectSlice;\n\nexport const selectLearningUnitRecord = createSelector([selectSlice],\n  ({ units }) => units\n);\n\nexport const selectLearningUnits = createSelector([selectLearningUnitRecord],\n  units => Object.values(units)\n);\n","export const getKey = <K extends string | number | symbol, T>\n  (key: K | null | undefined, record: Record<K, T>): T | null =>\n{\n  if (key === null || key === undefined) {\n    return null;\n  }\n  const result = record[key];\n  if (result === undefined) {\n    return null;\n  }\n  return result;\n};\n\nexport const keys = <K extends string | number | symbol>\n  (record: Record<K, any>): K[] =>\n{\n  return Object.keys(record) as unknown as K[];\n};\n","import { LangProgress, TrainingProgress } from '../model/trainingProgress';\n\nexport const buildEmptyProgress = (): TrainingProgress => ({\n  de: buildEmptyLangProgress(),\n  fa: buildEmptyLangProgress(),\n});\n\nexport const buildEmptyLangProgress = (): LangProgress => ({\n  score: 0,\n  lastCorrect: null,\n  lastTried: null,\n});\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getKey } from '../../../util/record';\nimport { selectLearningUnitRecord } from '../../lexicon/selectors';\nimport { State } from '../slice';\nimport { buildEmptyLangProgress, buildEmptyProgress } from '../slice/trainingProgress';\n\nconst selectSlice = (state: any): State => state.trainer;\nexport default selectSlice;\n\nexport const selectTrainingProgress = createSelector([selectSlice], ({ trainingProgress }) => trainingProgress);\n\nexport const selectCurrentLanguage = createSelector([selectSlice], ({ trainingUnit }) => trainingUnit?.lang ?? null);\n\nexport const selectCurrentLearningUnit = createSelector([selectSlice, selectLearningUnitRecord],\n  ({ trainingUnit }, units) => getKey(trainingUnit?.id, units)\n);\n\nexport const selectCurrentTrainingProgress = createSelector([selectSlice],\n  ({ trainingUnit, trainingProgress }) => getKey(trainingUnit?.id, trainingProgress) ?? buildEmptyProgress()\n);\n\nexport const selectCurrentLangProgress = createSelector([selectCurrentLanguage, selectCurrentTrainingProgress],\n  (lang, trainingProgress) => lang !== null ? trainingProgress[lang] : buildEmptyLangProgress()\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { LearningUnit } from '../../lexicon/model/learningUnit';\nimport { selectLearningUnits } from '../../lexicon/selectors';\nimport { TrainingProgress } from '../../trainer/model/trainingProgress';\nimport { selectTrainingProgress } from '../../trainer/selectors';\nimport { DictionaryEntry } from '../model/dictionaryEntry';\nimport { DictionaryFilter } from '../model/dictionaryFilter';\nimport { State } from '../slice';\n\nconst selectSlice = (state: any): State => state.dictionary;\nexport default selectSlice;\n\nexport const selectFilter = createSelector([selectSlice], state => state.filter);\n\nexport const selectDictionary = createSelector([selectFilter, selectLearningUnits, selectTrainingProgress],\n  (filter, learningUnits, trainingProgress) => learningUnits\n    .filter(unit => unitMatchesFilter(unit, filter))\n    .map(unit => buildDictionaryEntry(unit, trainingProgress))\n);\n\nconst unitMatchesFilter = (unit: LearningUnit, { searchTerm }: Partial<DictionaryFilter>): boolean =>\n  searchTerm === undefined ||\n  [unit.de, unit.en, unit.fa, removeShortVowels(unit.fa), unit.faRm]\n    .some(term => term.toLowerCase().includes(searchTerm.toLowerCase().trim()));\n\nconst removeShortVowels = (text: string): string =>\n  text.replace(/[َُِ]/g, '');\n\nconst buildDictionaryEntry = (unit: LearningUnit, trainingProgress: Record<number, TrainingProgress>): DictionaryEntry => ({\n  ...unit,\n  scoreDe: trainingProgress[unit.id]?.de.score ?? null,\n  scoreFa: trainingProgress[unit.id]?.fa.score ?? null,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport { DictionaryFilter } from '../model/dictionaryFilter';\n\nexport interface State {\n  filter: Partial<DictionaryFilter>;\n}\n\nconst initialState: State = {\n  filter: {},\n};\n\nconst slice = createSlice({\n  name: 'dictionary',\n  initialState,\n  reducers: {\n    searchDictionary: (state: State, { payload }: { payload: string | null }): void => {\n      state.filter.searchTerm = payload || undefined;\n    },\n  },\n});\n\nexport const { searchDictionary } = slice.actions;\nexport default slice.reducer;\n","import React from 'react';\n\nexport const ArrowDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\n  </svg>\n);\n\nexport const ArrowUp = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\n  </svg>\n);\n\nexport const Book = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-book\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M1 2.828v9.923c.918-.35 2.107-.692 3.287-.81 1.094-.111 2.278-.039 3.213.492V2.687c-.654-.689-1.782-.886-3.112-.752-1.234.124-2.503.523-3.388.893zm7.5-.141v9.746c.935-.53 2.12-.603 3.213-.493 1.18.12 2.37.461 3.287.811V2.828c-.885-.37-2.154-.769-3.388-.893-1.33-.134-2.458.063-3.112.752zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\"/>\n  </svg>\n);\n\nexport const Check2Square = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check2-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\n    <path fillRule=\"evenodd\" d=\"M1.5 13A1.5 1.5 0 0 0 3 14.5h10a1.5 1.5 0 0 0 1.5-1.5V8a.5.5 0 0 0-1 0v5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 3v10z\"/>\n  </svg>\n);\n\nexport const ChevronDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n  </svg>\n);\n\nexport const Dash = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-dash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\n  </svg>\n);\n\nexport const FileEarmarkArrowDown = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-earmark-arrow-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4 0h5.5v1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h1V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z\"/>\n    <path d=\"M9.5 3V0L14 4.5h-3A1.5 1.5 0 0 1 9.5 3z\"/>\n    <path fillRule=\"evenodd\" d=\"M8 6a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 10.293V6.5A.5.5 0 0 1 8 6z\"/>\n  </svg>\n);\n\nexport const HourglassSplit = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-hourglass-split\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M2.5 15a.5.5 0 1 1 0-1h1v-1a4.5 4.5 0 0 1 2.557-4.06c.29-.139.443-.377.443-.59v-.7c0-.213-.154-.451-.443-.59A4.5 4.5 0 0 1 3.5 3V2h-1a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1h-1v1a4.5 4.5 0 0 1-2.557 4.06c-.29.139-.443.377-.443.59v.7c0 .213.154.451.443.59A4.5 4.5 0 0 1 12.5 13v1h1a.5.5 0 0 1 0 1h-11zm2-13v1c0 .537.12 1.045.337 1.5h6.326c.216-.455.337-.963.337-1.5V2h-7zm3 6.35c0 .701-.478 1.236-1.011 1.492A3.5 3.5 0 0 0 4.5 13s.866-1.299 3-1.48V8.35zm1 0c0 .701.478 1.236 1.011 1.492A3.5 3.5 0 0 1 11.5 13s-.866-1.299-3-1.48V8.35z\"/>\n  </svg>\n);\n\nexport const Lightning = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-lightning\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09zM4.157 8.5H7a.5.5 0 0 1 .478.647L6.11 13.59l5.732-6.09H9a.5.5 0 0 1-.478-.647L9.89 2.41 4.157 8.5z\"/>\n  </svg>\n);\n\nexport const Plus = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n  </svg>\n);\n\nexport const Tools = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-tools\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M0 1l1-1 3.081 2.2a1 1 0 0 1 .419.815v.07a1 1 0 0 0 .293.708L10.5 9.5l.914-.305a1 1 0 0 1 1.023.242l3.356 3.356a1 1 0 0 1 0 1.414l-1.586 1.586a1 1 0 0 1-1.414 0l-3.356-3.356a1 1 0 0 1-.242-1.023L9.5 10.5 3.793 4.793a1 1 0 0 0-.707-.293h-.071a1 1 0 0 1-.814-.419L0 1zm11.354 9.646a.5.5 0 0 0-.708.708l3 3a.5.5 0 0 0 .708-.708l-3-3z\"/>\n    <path fillRule=\"evenodd\" d=\"M15.898 2.223a3.003 3.003 0 0 1-3.679 3.674L5.878 12.15a3 3 0 1 1-2.027-2.027l6.252-6.341A3 3 0 0 1 13.778.1l-2.142 2.142L12 4l1.757.364 2.141-2.141zm-13.37 9.019L3.001 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026z\"/>\n  </svg>\n);\n\nexport const X = (): JSX.Element => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n  </svg>\n);\n","export enum TrainingMode {\n  Examination,\n  Learning,\n}\n","import React from 'react';\nimport { ArrowDown, ArrowUp } from '../../../../components/Icons';\nimport './ScoreBadge.scss';\n\nexport const ScoreBadge = ({ score, increased, decreased }: {\n  score: number;\n  increased?: boolean;\n  decreased?: boolean;\n}): JSX.Element => (\n  <span className={`badge rounded-pill score-badge lvl-${score}`}>\n    {decreased && <ArrowDown></ArrowDown>}\n    {increased && <ArrowUp></ArrowUp>}\n    {score}\n  </span>\n);\n","import React from 'react';\nimport { LearningUnitType } from '../../../lexicon/model/learningUnit';\nimport { ScoreBadge } from '../../../trainer/components/ScoreBadge/ScoreBadge';\nimport { DictionaryEntry } from '../../model/dictionaryEntry';\nimport './DictionaryDetails.scss';\n\nexport class DictionaryDetails extends React.Component<{\n  entry: DictionaryEntry;\n}> {\n  render(): JSX.Element {\n    const { entry } = this.props;\n    return (\n      <div className=\"dict-details\">\n        <div className=\"row type\">\n          <div className=\"key\">\n            Wortart\n          </div>\n          <div className=\"value\">\n            {this.formatType(entry.type)}\n          </div>\n        </div>\n        <div className=\"row fa\">\n          <div className=\"key\">\n            Persisch\n          </div>\n          <div className=\"value\">\n            {entry.fa}\n            {entry.scoreFa !== null && (\n              <span className=\"score\">\n                <ScoreBadge score={entry.scoreFa}></ScoreBadge>\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"row fa-rm\">\n          <div className=\"key\">\n          </div>\n          <div className=\"value\">\n            /{entry.faRm}/\n          </div>\n        </div>\n        <div className=\"row de\">\n          <div className=\"key\">\n            Deutsch\n          </div>\n          <div className=\"value\">\n            {entry.de}\n            {entry.scoreDe !== null && (\n              <span className=\"score\">\n                <ScoreBadge score={entry.scoreDe}></ScoreBadge>\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"row en\">\n          <div className=\"key\">\n            Englisch\n          </div>\n          <div className=\"value\">\n            {entry.en}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private formatType(type: LearningUnitType): string {\n    switch (type) {\n    case 'adjective':\n      return 'Adjektiv';\n    case 'noun':\n      return 'Substantiv';\n    case 'verb':\n      return 'Verb';\n    default:\n      return 'nicht klassifizert';\n    }\n  }\n}\n","import React from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { ChevronDown } from '../../../../components/Icons';\nimport { DictionaryEntry } from '../../model/dictionaryEntry';\nimport { VisibilityState } from '../../model/visibilityState';\nimport { DictionaryDetails } from '../DictionaryDetails/DictionaryDetails';\nimport './DictionaryAccordeon.scss';\n\nexport class DictionaryAccordeon extends React.Component<{\n  entry: DictionaryEntry;\n}, {\n  details: VisibilityState;\n}> {\n  state = {\n    details: VisibilityState.Hidden,\n  };\n\n  render(): JSX.Element {\n    const { entry } = this.props;\n    return (\n      <React.Fragment>\n        {this.renderRow(entry)}\n        {this.state.details !== VisibilityState.Hidden && this.renderDetails(entry)}\n      </React.Fragment>\n    );\n  }\n\n  private renderRow(entry: DictionaryEntry): JSX.Element {\n    return (\n      <tr\n        className={`dict-accordeon ${this.state.details === VisibilityState.Visible ? 'show-details' : ''}`}\n        onClick={(): void => this.toggleDetails()}\n      >\n        <td>{entry.fa}</td>\n        <td>{entry.de}</td>\n        <td><ChevronDown></ChevronDown></td>\n      </tr>\n    );\n  }\n\n  private renderDetails(entry: DictionaryEntry): JSX.Element {\n    return (\n      <tr\n        className=\"dict-accordeon-details\"\n      >\n        <td colSpan={3}>\n          <AnimateHeight\n            height={(this.state.details === VisibilityState.Visible) ? 'auto' : 0}\n            duration={250}\n            easing=\"ease-out\"\n            onAnimationEnd={(): void => this.endAnimation()}\n          >\n            <DictionaryDetails entry={entry}></DictionaryDetails>\n          </AnimateHeight>\n        </td>\n      </tr>\n    );\n  }\n\n  private toggleDetails(): void {\n    switch (this.state.details) {\n    case VisibilityState.Visible:\n      return this.hideDetails();\n    case VisibilityState.Hidden:\n      return this.showDetails();\n    }\n  }\n\n  private hideDetails(): void {\n    this.setState({ details: VisibilityState.Transitioning });\n  }\n\n  private showDetails(): void {\n    this.setState({ details: VisibilityState.Transitioning });\n    setTimeout(() => this.setState({ details: VisibilityState.Visible }));\n  }\n\n  private endAnimation(): void {\n    if (this.state.details === VisibilityState.Transitioning) {\n      this.setState({ details: VisibilityState.Hidden });\n    }\n  }\n}\n","import React from 'react';\nimport { X } from '../../../../components/Icons';\nimport './DictionarySearch.scss';\n\nexport class DictionarySearch extends React.Component<{\n  currentSearch?: string;\n  search: (searchTerm: string | null) => void;\n}> {\n  private searchRef = React.createRef<HTMLInputElement>();\n\n  render(): JSX.Element {\n    return (\n      <div className=\"dict-search\">\n        <input className={`form-control ${this.props.currentSearch ? '' : 'empty'}`}\n          type=\"text\"\n          placeholder=\"Durchsuchen...\"\n          ref={this.searchRef}\n          value={this.props.currentSearch ?? ''}\n          onChange={(): void => this.updateSearchTerm()}\n        />\n        <button className=\"btn bg-transparent\"\n          onClick={(): void => this.resetSearchTerm()}\n        >\n          <X></X>\n        </button>\n      </div>\n    );\n  }\n\n  private updateSearchTerm(): void {\n    const searchTerm = this.searchRef.current?.value ?? null;\n    this.props.search(searchTerm);\n  }\n\n  private resetSearchTerm(): void {\n    this.props.search(null);\n  }\n}\n","import React from 'react';\nimport { DictionaryEntry } from '../../model/dictionaryEntry';\nimport { DictionaryFilter } from '../../model/dictionaryFilter';\nimport { DictionaryAccordeon } from '../DictionaryAccordeon/DictionaryAccordeon';\nimport { DictionarySearch } from '../DictionarySearch/DictionarySearch';\n\nexport class Dictionary extends React.Component<{\n  entries: DictionaryEntry[];\n  filter: Partial<DictionaryFilter>;\n  search: (searchTerm: string | null) => void;\n}> {\n  private searchRef = React.createRef<HTMLInputElement>();\n\n  render(): JSX.Element {\n    const { entries } = this.props;\n    return (\n      <div>\n        <h2>Wörterbuch</h2>\n        <DictionarySearch\n          currentSearch={this.props.filter?.searchTerm}\n          search={(s: string | null): void => this.props.search(s)}\n        >\n        </DictionarySearch>\n        <table className=\"table dictionary\">\n          <tbody>\n            {entries.map(e => (<DictionaryAccordeon key={e.id} entry={e}></DictionaryAccordeon>))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  private updateSearchTerm(): void {\n    const searchTerm = this.searchRef.current?.value ?? null;\n    this.props.search(searchTerm);\n  }\n}\n","import { connect } from 'react-redux';\nimport { selectDictionary, selectFilter } from '../../selectors';\nimport { searchDictionary } from '../../slice';\nimport { Dictionary } from './Dictionary';\n\nconst mapStateToProps = (state: any): any => ({\n  entries: selectDictionary(state),\n  filter: selectFilter(state),\n});\n\nconst mapDispatchToProps = {\n  search: searchDictionary,\n};\n\nexport const DictionaryContainer =\n  connect(mapStateToProps, mapDispatchToProps)(Dictionary);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { DictionaryContainer } from '../components/Dictionary/DictionaryContainer';\n\nexport default [\n  <Route key=\"dictionary\"\n    path=\"/dictionary\"\n    component={DictionaryContainer}>\n  </Route>,\n];\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { FileEarmarkArrowDown } from '../../../../components/Icons';\nimport { downloadFile } from '../../../../util/file';\nimport './Settings.scss';\n\nexport class Settings extends React.Component {\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <h2>Einstellungen</h2>\n        <div className=\"settings\">\n          <button className=\"btn btn-link\"\n            title=\"Datenbank speichern\"\n            onClick={(): void => this.exportDatabase()}\n          >\n            <FileEarmarkArrowDown></FileEarmarkArrowDown>\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private exportDatabase(): void {\n    const timestamp = format(new Date(), 'yyyy-MM-dd-HH-mm');\n    const database = JSON.stringify(localStorage);\n    downloadFile(`persian-learner-backup-${timestamp}.json`, database);\n  }\n}\n","export const downloadFile = (name: string, content: string): void => {\n  const event = document.createEvent('MouseEvents');\n  event.initEvent('click', true, true);\n\n  const anchor = document.createElement('a');\n  anchor.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\n  anchor.setAttribute('download', name);\n  anchor.dispatchEvent(event);\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Settings } from '../components/Settings/Settings';\n\nexport default [\n  <Route key=\"settings\"\n    path=\"/settings\"\n    component={Settings}>\n  </Route>,\n];\n","export enum TestStage {\n  Initial,\n  Retry,\n  Passed,\n  PassedOnRetry,\n  Failed,\n}\n","import { differenceInSeconds } from 'date-fns';\n\nexport const getDifferenceFromNowInSeconds = (date: string | null): number => {\n  if (date !== null) {\n    return differenceInSeconds(new Date(), new Date(date));\n  } else {\n    return Number.POSITIVE_INFINITY;\n  }\n};\n","const configuration = {\n  score: 5,\n  minGap: 7*24*60*60,\n};\n\nexport default configuration;\n","import { getDifferenceFromNowInSeconds } from '../../../../util/time';\nimport { LangProgress } from '../../model/trainingProgress';\nimport configuration from './examinationStrategy.config';\nimport SelectionStrategy from './selectionStrategy';\n\nconst getPriority: SelectionStrategy = ({ score, lastTried }: LangProgress): number => {\n  const gap = getDifferenceFromNowInSeconds(lastTried);\n\n  if (score === configuration.score && gap > configuration.minGap) {\n    return gap;\n  } else {\n    return 0;\n  }\n};\n\nexport default getPriority;\n","const configuration = [\n  { score: 0, frequency: 16, minGap: 60 },\n  { score: 1, frequency: 8, minGap: 5*60 },\n  { score: 2, frequency: 4, minGap: 30*60 },\n  { score: 3, frequency: 2, minGap: 3*60*60 },\n  { score: 4, frequency: 1, minGap: 24*60*60 },\n];\n\nexport default configuration;\n","import { getDifferenceFromNowInSeconds } from '../../../../util/time';\nimport { LangProgress } from '../../model/trainingProgress';\nimport configuration from './learningStrategy.config';\nimport SelectionStrategy from './selectionStrategy';\n\nconst getPriority: SelectionStrategy = ({ score, lastTried }: LangProgress): number => {\n  const config = configuration.find(c => c.score === score);\n  const gap = getDifferenceFromNowInSeconds(lastTried);\n\n  if (config !== undefined && gap > config.minGap) {\n    return config.frequency;\n  } else {\n    return 0;\n  }\n};\n\nexport default getPriority;\n","import { TrainingMode } from '../../model/trainingMode';\nimport examinationStrategy from './examinationStrategy';\nimport learningStrategy from './learningStrategy';\nimport SelectionStrategy from './selectionStrategy';\n\nconst selectionStrategyFactory = (mode: TrainingMode): SelectionStrategy => {\n  switch (mode) {\n  case TrainingMode.Examination:\n    return examinationStrategy;\n  case TrainingMode.Learning:\n    return learningStrategy;\n  default:\n    throw new Error(`Unknown mode ${mode}`);\n  }\n};\n\nexport default selectionStrategyFactory;\n","const selectRandom = <T> (\n  elements: T[],\n  weightProjection: (el: T) => number,\n  rand = Math.random()\n): T | null => {\n  const weights = elements.map(el => weightProjection(el));\n  const elementUpperBounds = buildPartialSums(weights);\n  const totalWeight = getLast(elementUpperBounds, 0);\n\n  if (totalWeight === 0) {\n    return null;\n  }\n\n  const selectedValue = rand * totalWeight;\n  const selectedIndex = elementUpperBounds.findIndex(sum => selectedValue <= sum);\n  return elements[selectedIndex];\n};\n\nconst buildPartialSums = (values: number[]): number[] => {\n  const partialSums = new Array(values.length);\n  let ongoingSum = 0;\n  for (let i = 0; i < values.length; i++) {\n    ongoingSum += values[i];\n    partialSums[i] = ongoingSum;\n  }\n  return partialSums;\n};\n\nconst getLast = <T> (array: T[], defaultValue: T): T => {\n  if (array.length > 0) {\n    return array.slice(-1)[0];\n  } else {\n    return defaultValue;\n  }\n};\n\nexport default selectRandom;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LearningUnit } from '../../lexicon/model/learningUnit';\nimport { selectLearningUnits } from '../../lexicon/selectors';\nimport { TrainingMode } from '../model/trainingMode';\nimport { LangProgress, TrainingProgress } from '../model/trainingProgress';\nimport { TrainingUnit, TrainingUnitLang, TrainingUnitWithPriority } from '../model/trainingUnit';\nimport SelectionStrategy from './selection/selectionStrategy';\nimport selectionStrategyFactory from './selection/selectionStrategyFactory';\nimport selectRandom from './selectRandom';\nimport { buildEmptyProgress } from './trainingProgress';\n\nexport interface State {\n  trainingUnit: TrainingUnit | null;\n  trainingProgress: Record<number, TrainingProgress>;\n}\n\nconst initialState: State = {\n  trainingUnit: null,\n  trainingProgress: {},\n};\n\nexport const select = createAsyncThunk(\n  'train/select',\n  (trainingMode: TrainingMode, { getState }) => ({\n    learningUnits: selectLearningUnits(getState()),\n    trainingMode,\n  })\n);\n\ninterface SelectPayload {\n  learningUnits: LearningUnit[];\n  trainingMode: TrainingMode;\n}\n\nconst slice = createSlice({\n  name: 'train',\n  initialState,\n  reducers: {\n    pass: (state: State): void => {\n      const progress = getLangProgress(state);\n      progress.score = Math.min(progress.score + 1, 5);\n      progress.lastCorrect = new Date().toISOString();\n      progress.lastTried = progress.lastCorrect;\n    },\n    fail: (state: State): void => {\n      const progress = getLangProgress(state);\n      progress.score = Math.max(progress.score - 1, 0);\n      progress.lastTried = new Date().toISOString();\n    }\n  },\n  extraReducers: {\n    [select.fulfilled.type]: (state, { payload: { learningUnits, trainingMode } }: PayloadAction<SelectPayload>): void => {\n      const { trainingProgress } = state;\n      const selectionStrategy = selectionStrategyFactory(trainingMode);\n\n      const trainingUnits = learningUnits\n        .map(({ id }) => buildTrainingUnits(id, trainingProgress[id], selectionStrategy))\n        .flat();\n      const selectedUnit = selectRandom(trainingUnits, unit => unit.priority);\n      state.trainingUnit = extractTrainingUnit(selectedUnit);\n    }\n  }\n});\n\nconst getLangProgress = ({ trainingUnit, trainingProgress }: State): LangProgress => {\n  if (trainingUnit === null) {\n    throw new Error('No training unit selected');\n  }\n\n  if (trainingProgress[trainingUnit.id] === undefined) {\n    trainingProgress[trainingUnit.id] = buildEmptyProgress();\n  }\n\n  return trainingProgress[trainingUnit.id][trainingUnit.lang];\n};\n\nconst buildTrainingUnits = (\n  id: number,\n  progress: TrainingProgress = buildEmptyProgress(),\n  selectionStrategy: SelectionStrategy\n): TrainingUnitWithPriority[] => {\n  const languages: TrainingUnitLang[] = ['de', 'fa'];\n  return languages.map(lang => ({\n    id,\n    lang,\n    priority: selectionStrategy(progress[lang])\n  }));\n};\n\nconst extractTrainingUnit = (unit: TrainingUnitWithPriority | null): TrainingUnit | null => {\n  if (unit !== null) {\n    const { id, lang } = unit;\n    return { id, lang };\n  } else {\n    return null;\n  }\n};\n\nexport const { pass, fail } = slice.actions;\nexport default slice.reducer;\n","import React from 'react';\nimport { Dash, Plus } from '../../../../components/Icons';\n\nexport class ToggleText extends React.Component<{\n  title: string;\n  value: string;\n}, {\n  expanded: boolean;\n}> {\n  state = {\n    expanded: false,\n  };\n\n  render(): JSX.Element {\n    const { title, value } = this.props;\n    if (this.state.expanded) {\n      return (\n        <div className=\"cursor-pointer\"\n          onClick={(): void => this.setState({ expanded: false })}\n        >\n          <Dash></Dash> {title}: <em>{value}</em>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"cursor-pointer\"\n          onClick={(): void => this.setState({ expanded: true })}\n        >\n          <Plus></Plus> {title}\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport { LearningUnit } from '../../../lexicon/model/learningUnit';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { TestStage } from '../../model/testStage';\nimport { LangProgress } from '../../model/trainingProgress';\nimport { ScoreBadge } from '../ScoreBadge/ScoreBadge';\n\nexport abstract class BaseTrainer extends React.Component<{\n  progress: LangProgress;\n  unit: LearningUnit;\n  fail: () => void;\n  next: () => void;\n  pass: () => void;\n}, {\n  enteredTranslation: string;\n  stage: TestStage;\n}> {\n  private inputRef = React.createRef<HTMLInputElement>();\n  private submitRef = React.createRef<HTMLButtonElement>();\n\n  state = {\n    enteredTranslation: '',\n    stage: TestStage.Initial,\n  };\n\n  componentDidUpdate(): void {\n    if (this.inputRef.current) {\n      this.inputRef.current.focus();\n    } else if (this.submitRef.current) {\n      this.submitRef.current.focus();\n    }\n  }\n\n  render(): JSX.Element {\n    const { unit } = this.props;\n    return (\n      <form onSubmit={(e): void => this.submit(e)}>\n        {this.renderTask(unit)}\n        {this.isShowSolution()\n          ? this.renderSolution(unit, this.renderSolutionContent())\n          : this.renderSolutionInput()\n        }\n        {this.renderButtons()}\n      </form>\n    );\n  }\n\n  protected abstract renderTask(unit: LearningUnit): JSX.Element;\n  protected abstract renderSolution(unit: LearningUnit, content: JSX.Element): JSX.Element;\n\n  private renderSolutionContent(): JSX.Element {\n    const { progress } = this.props;\n    return (\n      <React.Fragment>\n        {this.isWrongSolution() && (\n          <React.Fragment>\n            <span className=\"text-danger text-decoration-line-through\">\n              {this.state.enteredTranslation}\n            </span>\n            <span> </span>\n          </React.Fragment>\n        )}\n        <span className={this.isCountingAsSuccess() || this.isWrongSolution() ? 'text-success' : 'text-warning'}>\n          {this.getCorrectSolution()}\n          <ScoreBadge score={progress.score}\n            decreased={this.isCountingAsFailure()}\n            increased={this.isCountingAsSuccess()}\n          ></ScoreBadge>\n        </span>\n      </React.Fragment>\n    );\n  }\n\n  private renderSolutionInput(): JSX.Element {\n    const { label, large } = this.getSolutionInputConfig();\n    return (\n      <div className=\"mb-3\">\n        <label htmlFor=\"solution\">\n          {label}\n        </label>\n        <input type=\"text\"\n          id=\"solution\"\n          className={`form-control${large ? ' text-large' : ''}`}\n          value={this.state.enteredTranslation}\n          ref={this.inputRef}\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          onChange={(e): void => this.setState({ enteredTranslation: e.target.value })}\n        >\n        </input>\n        <div className=\"form-text\">\n          &nbsp;\n        </div>\n      </div>\n    );\n  }\n\n  protected abstract getSolutionInputConfig(): SolutionInputConfig;\n\n  private renderButtons(): JSX.Element {\n    if (this.isShowSolution()) {\n      return (\n        <div className=\"col\">\n          <button type=\"submit\"\n            className=\"btn btn-primary w-100\"\n            key=\"proceed-btn\"\n            ref={this.submitRef}\n          >\n            Weiter\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"row mb-2\">\n            <div className=\"col-6 col-sm-4\">\n              <button type=\"button\"\n                className=\"btn btn-secondary w-100\"\n                key=\"solve-btn\"\n                onClick={(): void => this.solve()}\n              >\n                Auflösen\n              </button>\n            </div>\n            <div className=\"col-6 col-sm-8\">\n              <button type=\"submit\"\n                className={`btn ${this.isCountingAsFailure() ? 'btn-warning' : 'btn-primary'} w-100`}\n                key=\"chck-btn\"\n                ref={this.submitRef}\n              >\n                Überprüfen\n              </button>\n            </div>\n          </div>\n          {this.state.stage === TestStage.Initial\n            ? (\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button type=\"button\"\n                    className=\"btn btn-link w-100\"\n                    key=\"skip-btn\"\n                    onClick={(): void => this.proceed()}\n                  >\n                    Überspringen\n                  </button>\n                </div>\n              </div>\n            ) : ''\n          }\n        </React.Fragment>\n      );\n    }\n  }\n\n  private submit(event: React.FormEvent): void {\n    event.preventDefault();\n    if (this.isShowSolution()) {\n      this.proceed();\n    } else {\n      this.check();\n    }\n  }\n\n  private proceed(): void {\n    this.props.next();\n    this.setState({\n      enteredTranslation: '',\n      stage: TestStage.Initial,\n    });\n  }\n\n  private check(): void {\n    const pass = !this.isWrongSolution();\n    this.reportResult(pass);\n    this.setState({ stage: this.getStageAfterCheck(pass) });\n  }\n\n  private getStageAfterCheck(pass: boolean): TestStage {\n    if (!pass) {\n      return TestStage.Retry;\n    } else if (this.state.stage === TestStage.Initial) {\n      return TestStage.Passed;\n    } else {\n      return TestStage.PassedOnRetry;\n    }\n  }\n\n  private solve(): void {\n    this.reportResult(false);\n    this.setState({ stage: TestStage.Failed });\n  }\n\n  private reportResult(pass: boolean): void {\n    if (this.state.stage !== TestStage.Initial) {\n      return;\n    } else if (pass) {\n      this.props.pass();\n    } else {\n      this.props.fail();\n    }\n  }\n\n  private isShowSolution(): boolean {\n    return [\n      TestStage.Passed,\n      TestStage.PassedOnRetry,\n      TestStage.Failed,\n    ].includes(this.state.stage);\n  }\n\n  private isWrongSolution(): boolean {\n    return this.state.enteredTranslation !== this.getCorrectSolution();\n  }\n\n  protected abstract getCorrectSolution(): string;\n\n  private isCountingAsSuccess(): boolean {\n    return [\n      TestStage.Passed,\n    ].includes(this.state.stage);\n  }\n\n  private isCountingAsFailure(): boolean {\n    return [\n      TestStage.PassedOnRetry,\n      TestStage.Retry,\n      TestStage.Failed,\n    ].includes(this.state.stage);\n  }\n}\n","import React from 'react';\nimport { LearningUnit } from '../../../lexicon/model/learningUnit';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { ToggleText } from '../ToggleText/ToggleText';\nimport { BaseTrainer } from './BaseTrainer';\n\nexport class FarsiTrainer extends BaseTrainer {\n  renderTask(unit: LearningUnit): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Deutsch\n        </div>\n        <div className=\"form-control-plaintext fw-bold\">\n          {unit.de}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Englisch\" value={unit.en}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  renderSolution(unit: LearningUnit, content: JSX.Element): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>Persisch</div>\n        <div className=\"form-control-plaintext text-large\">\n          {content}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Romanisierung\" value={unit.faRm}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  getSolutionInputConfig(): SolutionInputConfig {\n    return {\n      label: 'Persisch',\n      large: true,\n    };\n  }\n\n  getCorrectSolution(): string {\n    return this.props.unit.fa;\n  }\n}\n","import React from 'react';\nimport { LearningUnit } from '../../../lexicon/model/learningUnit';\nimport { SolutionInputConfig } from '../../model/baseTrainerConfig';\nimport { ToggleText } from '../ToggleText/ToggleText';\nimport { BaseTrainer } from './BaseTrainer';\n\nexport class GermanTrainer extends BaseTrainer {\n  renderTask(unit: LearningUnit): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Persisch\n        </div>\n        <div className=\"form-control-plaintext text-large\">\n          {unit.fa}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Romanisierung\" value={unit.faRm}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  renderSolution(unit: LearningUnit, content: JSX.Element): JSX.Element {\n    return (\n      <div className=\"mb-3\">\n        <div>\n          Deutsch\n        </div>\n        <div className=\"form-control-plaintext\">\n          {content}\n        </div>\n        <div className=\"form-text\">\n          <ToggleText title=\"Englisch\" value={unit.en}></ToggleText>\n        </div>\n      </div>\n    );\n  }\n\n  getSolutionInputConfig(): SolutionInputConfig {\n    return {\n      label: 'Deutsch',\n      large: false,\n    };\n  }\n\n  getCorrectSolution(): string {\n    return this.props.unit.de;\n  }\n}\n","import React, { FormEvent } from 'react';\nimport { HourglassSplit } from '../../../../components/Icons';\nimport './NoTraining.scss';\n\nexport const NoTraining = (props: {\n  next: () => void;\n}): JSX.Element => (\n  <form onSubmit={(e: FormEvent): void => { e.preventDefault(); props.next(); }}>\n    <div className=\"no-training\">\n      <HourglassSplit></HourglassSplit>\n      <p>Zur Zeit gibt es nichts zu üben.</p>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Aktualisieren\n      </button>\n    </div>\n  </form>\n);\n","import React from 'react';\nimport { LearningUnit } from '../../../lexicon/model/learningUnit';\nimport { TrainingMode } from '../../model/trainingMode';\nimport { LangProgress } from '../../model/trainingProgress';\nimport { TrainingUnitLang } from '../../model/trainingUnit';\nimport { FarsiTrainer } from '../LangTrainer/FarsiTrainer';\nimport { GermanTrainer } from '../LangTrainer/GermanTrainer';\nimport { NoTraining } from '../NoTraining/NoTraining';\n\nexport class Trainer extends React.Component<{\n  lang: TrainingUnitLang | null;\n  progress: LangProgress;\n  unit: LearningUnit | null;\n  trainingMode: TrainingMode;\n  fail: () => void;\n  next: (trainingMode: TrainingMode) => void;\n  pass: () => void;\n}> {\n  componentDidMount(): void {\n    this.selectNextUnit();\n  }\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <h2>\n          {this.props.trainingMode === TrainingMode.Learning ? 'Training' : 'Wiederholung'}\n        </h2>\n        {this.renderBody()}\n      </React.Fragment>\n    );\n  }\n\n  renderBody(): JSX.Element {\n    const { lang, progress, unit, fail, pass } = this.props;\n    if (lang === 'de' && unit !== null) {\n      return <GermanTrainer\n        unit={unit}\n        progress={progress}\n        pass={pass}\n        fail={fail}\n        next={(): void => this.selectNextUnit()}\n      ></GermanTrainer>;\n    } else if (lang === 'fa' && unit !== null) {\n      return <FarsiTrainer\n        unit={unit}\n        progress={progress}\n        pass={pass}\n        fail={fail}\n        next={(): void => this.selectNextUnit()}\n      ></FarsiTrainer>;\n    } else {\n      return <NoTraining\n        next={(): void => this.selectNextUnit()}\n      ></NoTraining>;\n    }\n  }\n\n  private selectNextUnit(): void {\n    this.props.next(this.props.trainingMode);\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { connect } from 'react-redux';\nimport { TrainingMode } from '../../model/trainingMode';\nimport { selectCurrentLangProgress, selectCurrentLanguage, selectCurrentLearningUnit } from '../../selectors';\nimport { fail, pass, select } from '../../slice';\nimport { Trainer } from './Trainer';\n\nconst mapStateToProps = (trainingMode: TrainingMode) => (state: any) => ({\n  lang: selectCurrentLanguage(state),\n  progress: selectCurrentLangProgress(state),\n  unit: selectCurrentLearningUnit(state),\n  trainingMode\n});\n\nconst mapDispatchToProps = {\n  fail: fail,\n  next: select,\n  pass: pass,\n};\n\nexport const TrainerContainer = (trainingMode: TrainingMode) =>\n  connect(mapStateToProps(trainingMode), mapDispatchToProps)(Trainer);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { TrainerContainer } from '../components/Trainer/TrainerContainer';\nimport { TrainingMode } from '../model/trainingMode';\n\nexport default [\n  <Route key=\"trainerLearn\"\n    path=\"/trainer/learn\"\n    component={TrainerContainer(TrainingMode.Learning)}>\n  </Route>,\n  <Route key=\"trainerExam\"\n    path=\"/trainer/exam\"\n    component={TrainerContainer(TrainingMode.Examination)}>\n  </Route>,\n  <Redirect key=\"trainerRoot\"\n    from=\"/trainer\"\n    to=\"/trainer/learn\">\n  </Redirect>,\n];\n","import React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport dictionaryRoutes from '../features/dictionary/routes';\nimport settingsRoutes from '../features/settings/routes';\nimport trainerRoutes from '../features/trainer/routes';\n\nexport default (\n  <Switch>\n    {dictionaryRoutes},\n    {settingsRoutes},\n    {trainerRoutes},\n    <Redirect key=\"root\" to=\"/trainer\">\n    </Redirect>\n  </Switch>\n);\n","import { Collapse } from 'bootstrap';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\nimport { Book, Check2Square, Lightning, Tools } from './Icons';\n\nexport class Header extends React.Component {\n  private collapseRef = React.createRef<HTMLDivElement>();\n  private collapse?: Collapse;\n\n  componentDidMount(): void {\n    if (this.collapseRef.current) {\n      this.collapse = new Collapse(this.collapseRef.current, {\n        toggle: false\n      });\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <nav className=\"header navbar navbar-expand-md navbar-dark bg-primary mb-2\">\n        <div className=\"container\">\n          <span className=\"navbar-brand mb-0 h1\">\n            Persian Learner\n          </span>\n          <button type=\"button\"\n            className=\"navbar-toggler\"\n            onClick={(): void => this.collapse?.toggle()}\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            id=\"navbar-content\"\n            className=\"collapse navbar-collapse\"\n            ref={this.collapseRef}\n          >\n            <ul className=\"navbar-nav mr-auto mb-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/trainer/learn\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Lightning></Lightning>\n                  Training\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/trainer/exam\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Check2Square></Check2Square>\n                  Wiederholung\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/dictionary\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Book></Book>\n                  Wörterbuch\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"\n                  to=\"/settings\"\n                  onClick={(): void => this.collapse?.hide()}\n                >\n                  <Tools></Tools>\n                  Einstellungen\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastrContainer } from '../features/notification/components/Toastr/ToastrContainer';\nimport routes from '../routes';\nimport { Header } from './Header';\n\nexport class App extends React.Component {\n  render(): JSX.Element {\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASE_HREF}>\n        <header>\n          <Header></Header>\n        </header>\n        <main className=\"container\">\n          { routes }\n          <ToastrContainer></ToastrContainer>\n        </main>\n      </BrowserRouter>\n    );\n  }\n}\n","import vocabulary from '../data/vocabulary.json';\nimport { LearningUnit } from '../features/lexicon/model/learningUnit';\nimport { TrainingProgress } from '../features/trainer/model/trainingProgress';\nimport { TrainingUnit } from '../features/trainer/model/trainingUnit';\nimport { State } from '../reducers';\n\ninterface LexiconMigration {\n  added: LearningUnit[];\n  updated: LearningUnit[];\n  deleted: LearningUnit[];\n}\n\nconst lexiconMigration = (state: State): State => {\n  const migration = buildMigration(state.lexicon.units);\n\n  return {\n    ...state,\n    lexicon: {\n      ...state.lexicon,\n      units: migrateUnitsTrainingProgress(state.lexicon.units, migration),\n    },\n    trainer: {\n      ...state.trainer,\n      trainingUnit: migrateTrainingUnit(state.trainer.trainingUnit, migration),\n      trainingProgress: migrateTrainingProgress(state.trainer.trainingProgress, migration),\n    },\n  };\n};\n\nconst buildMigration = (persistedUnitRecord: Record<number, LearningUnit>): LexiconMigration => {\n  const persistedUnits = Object.values(persistedUnitRecord);\n  const expectedUnits = vocabulary as LearningUnit[];\n  const expectedUnitRecord = Object.fromEntries(\n    vocabulary.map(v => [v.id, v])\n  );\n\n  return {\n    added: expectedUnits.filter(u => !(u.id in persistedUnitRecord)),\n    updated: expectedUnits.filter(u => (u.id in persistedUnitRecord) && !isEqual(u, persistedUnitRecord[u.id])),\n    deleted: persistedUnits.filter(u => !(u.id in expectedUnitRecord)),\n  };\n};\n\nconst isEqual = (a: LearningUnit | undefined, b: LearningUnit | undefined): boolean => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nconst migrateUnitsTrainingProgress = (persisted: Record<number, LearningUnit>, migration: LexiconMigration): Record<number, LearningUnit> => {\n  const result = { ...persisted };\n  migration.added.forEach(u => result[u.id] = u);\n  migration.updated.forEach(u => result[u.id] = u);\n  migration.deleted.forEach(u => delete result[u.id]);\n  return result;\n};\n\nconst migrateTrainingUnit = (persisted: TrainingUnit | null, { deleted }: LexiconMigration): TrainingUnit | null => {\n  if (deleted.some(el => el.id === persisted?.id)) {\n    return null;\n  } else {\n    return persisted;\n  }\n};\n\nconst migrateTrainingProgress = (persisted: Record<number, TrainingProgress>, migration: LexiconMigration): Record<number, TrainingProgress> => {\n  const result = { ...persisted };\n  migration.updated.forEach(u => delete result[u.id]);\n  migration.deleted.forEach(u => delete result[u.id]);\n  return result;\n};\n\nexport default lexiconMigration;\n","import { PersistMigrate } from 'redux-persist';\nimport lexiconMigration from './lexiconMigration';\n\nconst migrate: PersistMigrate = state => {\n  // skip migrations on initial load\n  if (state === undefined) {\n    return Promise.resolve(undefined as any);\n  }\n\n  return Promise.resolve(lexiconMigration(state as any) as any);\n};\n\nexport default migrate;\n","import { createSlice } from '@reduxjs/toolkit';\nimport vocabulary from '../../../data/vocabulary.json';\nimport { LearningUnit } from '../model/learningUnit';\n\nexport interface State {\n  units: Record<number, LearningUnit>;\n}\n\nconst initialState: State = {\n  units: Object.fromEntries(\n    (vocabulary as LearningUnit[]).map(v => [v.id, v])\n  )\n};\n\nconst slice = createSlice({\n  name: 'lexicon',\n  initialState,\n  reducers: {\n  }\n});\n\nexport default slice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport dictionary, { State as DictionaryState } from '../features/dictionary/slice';\nimport lexicon, { State as LexiconState } from '../features/lexicon/slice';\nimport notification, { State as NotificationState } from '../features/notification/slice';\nimport trainer, { State as TrainerState } from '../features/trainer/slice';\n\nexport interface State {\n  dictionary: DictionaryState;\n  lexicon: LexiconState;\n  notification: NotificationState;\n  trainer: TrainerState;\n}\n\nconst rootReducer = combineReducers({\n  dictionary,\n  lexicon,\n  notification,\n  trainer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Single Page Apps for GitHub Pages\n// MIT License\n// https://github.com/rafgraph/spa-github-pages\n// This script checks to see if a redirect is present in the query string,\n// converts it back into the correct url and adds it to the\n// browser's history using window.history.replaceState(...),\n// which won't cause the browser to attempt to load the new url.\n// When the single page app is loaded further down in this file,\n// the correct url will be waiting in the browser's history for\n// the single page app to route accordingly.\n\nexport default (): void => {\n  const location = window.location;\n  if (location.search[1] === '/' ) {\n    const decoded = location.search\n      .slice(1)\n      .split('&')\n      .map((s) => s.replace(/~and~/g, '&'))\n      .join('?');\n    const replaceUrl = location.pathname.slice(0, -1) + decoded + location.hash;\n    window.history.replaceState(null, null as any, replaceUrl);\n  }\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport { version } from '../package.json';\nimport { App } from './components/App';\nimport decodeUrl from './decodeUrl';\nimport { addNotification } from './features/notification/slice';\nimport './index.scss';\nimport migrate from './migrations';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  decodeUrl();\n}\n\nconst persistedReducer = persistReducer({\n  key: 'root',\n  migrate,\n  storage,\n  version: 1,\n}, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <span className=\"version\" hidden>\n      {version}-{process.env.NODE_ENV}\n    </span>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register({\n  onSuccess: () => store.dispatch(addNotification('Caching abgeschlossen. Die App funktioniert jetzt auch offline!')),\n  onUpdate: () => store.dispatch(addNotification('Neue Version verfügbar. Zum Update bitte alle Tabs der App schließen!')),\n});\n"],"sourceRoot":""}